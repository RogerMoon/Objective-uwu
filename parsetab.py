
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ID OP_DIFDE OP_DIV OP_DOBLEIGUAL OP_IGUAL OP_MAS OP_MAYOROIGUAL OP_MAYORQUE OP_MENOROIGUAL OP_MENORQUE OP_MENOS OP_MULT OP_RESID PR_arreglo PR_black PR_blue PR_bool PR_circle PR_color PR_draw PR_else PR_end PR_false PR_flot PR_function PR_green PR_home PR_if PR_interseccion PR_kameBack PR_kameForw PR_kameRot PR_loop PR_main PR_negacion PR_num PR_orange PR_program PR_red PR_return PR_size PR_speed PR_square PR_true PR_union PR_var PR_violet PR_void PR_white PR_yellow TO_COMA TO_CORABRE TO_CORCIERRA TO_DIGIT TO_DOSPTOS TO_FLOT TO_LLAABRE TO_LLACIERRA TO_NUM TO_PARABRE TO_PARCIERRA TO_UWUprog : PR_program TO_LLAABRE declare mainBlock TO_LLACIERRAval :  TO_NUM\n\t\t\t| TO_FLOT\n\t\t\t| PR_true\n\t\t\t| PR_false\n\t\t\t| ID \n\t\t\t| PR_arreglo firstIndex moreDimIndex TO_CORCIERRAdeclare : decVar decFunc decVar : var decVar \n\t\t\t\t| empty decFunc : func decFunc \n\t\t\t\t| emptyvar : var1 arrayCreatevar1 :  PR_var tipo IDarrayCreate : firstCreate moreDimCreate TO_CORCIERRA \n \t\t\t\t   | emptyfirstCreate : TO_CORABRE TO_NUMmoreDimCreate : unaDimCreate moreDimCreate\n \t\t\t\t\t | emptyunaDimCreate : TO_COMA TO_NUMtipo : PR_num \n\t\t\t| PR_flot\n\t\t\t| PR_bool assign : assignTo OP_IGUAL megaExpassignTo : ID\n\t\t\t\t| PR_arreglo firstIndex moreDimIndex TO_CORCIERRA\n\t\t\t\t| PR_kameForw\n\t\t\t\t| PR_kameBack\n\t\t\t\t| PR_kameRot\n\t\t\t\t| PR_speedfirstIndex : ID TO_CORABRE expmoreDimIndex : unaDim moreDimIndex\n\t\t\t\t\t | emptyunaDim : TO_COMA expfunc : func1 func2func1 : func11 func12func11 : PR_function decideType ID TO_PARABREfunc12 : params TO_PARCIERRA TO_LLAABREfunc2 : decVar bloque TO_LLACIERRAdecideType : tipo \n\t\t\t\t  | PR_voidparams : tipo ID moreParams\n\t\t\t  | emptymoreParams : TO_COMA tipo ID moreParams \n\t\t\t  | emptymainBlock : mainBlock1 bloque TO_LLACIERRAmainBlock1 : PR_main TO_LLAABREopLogico : PR_interseccion \n\t\t\t\t| PR_unionloop : loop1 loop2 loop3loop1 : PR_looploop2 : TO_PARABRE exp TO_PARCIERRAloop3 : TO_LLAABRE bloque TO_LLACIERRAopRelacional : OP_DOBLEIGUAL \n\t\t\t\t\t\t| OP_DIFDE \n\t\t\t\t\t\t| OP_MENORQUE \n\t\t\t\t\t\t| OP_MENOROIGUAL \n\t\t\t\t\t\t| OP_MAYORQUE \n\t\t\t\t\t\t| OP_MAYOROIGUALbloque : estructura bloque \n\t\t\t  | TO_UWUestructura : assign \n\t\t\t\t  | loop \n\t\t\t\t  | comparacion\n\t\t\t\t  | return \n\t\t\t\t  | funcCall \n\t\t\t\t  | decVarfuncCall : funcCall1 funcCall2\n\t\t\t\t| PR_draw TO_PARABRE megaExp TO_PARCIERRA \n\t\t\t\t| PR_circle TO_PARABRE exp TO_PARCIERRA \n\t\t\t\t| PR_square TO_PARABRE exp TO_PARCIERRA \n\t\t\t\t| PR_size TO_PARABRE exp TO_PARCIERRA \n\t\t\t\t| PR_color TO_PARABRE colorChoice TO_PARCIERRA funcCall1 : ID TO_PARABREfuncCall2 : paramVals TO_PARCIERRAbool : PR_true \n\t\t\t| PR_falsecolorChoice : PR_red \n\t\t\t\t   | PR_green\n\t\t\t\t   | PR_blue \n\t\t\t\t   | PR_violet \n\t\t\t\t   | PR_orange \n\t\t\t\t   | PR_yellow \n\t\t\t\t   | PR_white \n\t\t\t\t   | PR_blackparamVals : unParam moreParamVals \n\t\t\t\t | emptymoreParamVals : TO_COMA unParam moreParamVals \n\t\t\t\t \t | emptyunParam : ID TO_DOSPTOS megaExpreturn : PR_return megaExpcomparacion : compara1 compara2compara1 : PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABREcompara2 : bloque TO_LLACIERRA maybeElsemaybeElse : checkElse doElse \n\t\t\t\t | emptycheckElse : PR_else TO_LLAABREdoElse : bloque TO_LLACIERRAmegaExp : maybeNot superExp anotherMegamaybeNot : PR_negacion \n\t\t\t\t| emptyanotherMega : opLogico megaExp \n\t\t\t\t   | emptysuperExp : exp maybeRelmaybeRel : opRelacional exp \n\t\t\t\t| emptyexp : term anotherExpanotherExp : OP_MAS exp \n\t\t\t\t  | OP_MENOS exp \n\t\t\t\t  | emptyterm : fact anotherTermanotherTerm : OP_MULT term \n\t\t\t\t   | OP_DIV term\n\t\t\t\t   | OP_RESID term\n\t\t\t\t   | emptyfact : TO_PARABRE megaExp TO_PARCIERRA \n\t\t\t| funcCall \n\t\t\t| valempty :'
    
_lr_action_items = {'PR_function':([3,4,5,7,9,12,13,17,24,33,43,75,105,],[-119,-119,15,-119,-10,-13,-16,15,-9,-35,-14,-15,-39,]),'PR_union':([98,122,123,124,125,127,129,130,131,133,135,136,150,154,155,159,161,162,163,167,168,175,182,189,198,200,201,202,203,204,206,214,],[-68,-4,-3,-118,-5,-2,-6,-119,-117,-119,171,-119,-75,-69,-73,-107,-110,-70,-111,-115,-72,-104,-106,-71,-116,-108,-109,-114,-112,-113,-105,-7,]),'PR_draw':([4,7,9,12,13,14,24,26,34,38,43,50,55,56,57,61,66,69,70,71,72,75,80,81,84,85,87,88,89,90,93,96,97,98,104,110,111,122,123,124,125,126,127,129,130,131,133,135,136,137,138,143,144,150,151,152,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,48,48,-36,-14,-67,48,-119,-65,-64,-66,48,-62,-63,-47,-15,-119,-119,48,48,48,-91,-100,-101,48,48,-119,-68,-92,-38,-24,-4,-3,-118,-5,-119,-2,-6,-119,-117,-119,-119,-119,48,48,-50,48,-75,-119,-119,-69,-73,48,-107,48,-110,-70,-111,48,48,48,-115,-72,-119,-48,-49,-99,-103,-55,-104,-57,-59,48,-54,-58,-56,-106,-71,-94,48,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'PR_else':([152,],[193,]),'PR_kameRot':([4,7,9,12,13,14,24,26,34,38,43,50,55,57,61,66,69,70,71,72,75,88,98,104,110,111,122,123,124,125,127,129,130,131,133,135,136,143,144,150,152,154,155,159,161,162,163,167,168,172,173,175,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,54,54,-36,-14,-67,54,-65,-64,-66,54,-62,-63,-47,-15,-91,-68,-92,-38,-24,-4,-3,-118,-5,-2,-6,-119,-117,-119,-119,-119,-50,54,-75,-119,-69,-73,-107,-110,-70,-111,-115,-72,-99,-103,-104,-106,-71,-94,54,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'PR_true':([56,80,81,84,85,87,89,90,93,96,97,126,137,138,151,158,160,164,165,166,169,170,171,174,176,177,178,179,180,181,],[-119,-119,-119,122,122,122,-100,-101,122,122,-119,-119,122,122,-119,122,122,122,122,122,-119,-48,-49,-55,-57,-59,122,-54,-58,-56,]),'TO_FLOT':([56,80,81,84,85,87,89,90,93,96,97,126,137,138,151,158,160,164,165,166,169,170,171,174,176,177,178,179,180,181,],[-119,-119,-119,123,123,123,-100,-101,123,123,-119,-119,123,123,-119,123,123,123,123,123,-119,-48,-49,-55,-57,-59,123,-54,-58,-56,]),'PR_interseccion':([98,122,123,124,125,127,129,130,131,133,135,136,150,154,155,159,161,162,163,167,168,175,182,189,198,200,201,202,203,204,206,214,],[-68,-4,-3,-118,-5,-2,-6,-119,-117,-119,170,-119,-75,-69,-73,-107,-110,-70,-111,-115,-72,-104,-106,-71,-116,-108,-109,-114,-112,-113,-105,-7,]),'TO_UWU':([4,7,9,12,13,14,24,26,34,38,43,50,55,57,61,66,69,70,71,72,75,88,98,104,110,111,122,123,124,125,127,129,130,131,133,135,136,143,144,150,152,154,155,159,161,162,163,167,168,172,173,175,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,47,47,-36,-14,-67,47,-65,-64,-66,47,-62,-63,-47,-15,-91,-68,-92,-38,-24,-4,-3,-118,-5,-2,-6,-119,-117,-119,-119,-119,-50,47,-75,-119,-69,-73,-107,-110,-70,-111,-115,-72,-99,-103,-104,-106,-71,-94,47,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'PR_var':([3,4,7,9,12,13,14,24,26,34,38,43,50,55,57,61,66,69,70,71,72,75,88,98,104,110,111,122,123,124,125,127,129,130,131,133,135,136,143,144,150,152,154,155,159,161,162,163,167,168,172,173,175,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[6,-119,6,-10,-13,-16,6,-9,6,6,-36,-14,-67,6,-65,-64,-66,6,-62,-63,-47,-15,-91,-68,-92,-38,-24,-4,-3,-118,-5,-2,-6,-119,-117,-119,-119,-119,-50,6,-75,-119,-69,-73,-107,-110,-70,-111,-115,-72,-99,-103,-104,-106,-71,-94,6,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'OP_DOBLEIGUAL':([98,122,123,124,125,127,129,130,131,133,136,150,154,155,159,161,162,163,167,168,189,198,200,201,202,203,204,214,],[-68,-4,-3,-118,-5,-2,-6,-119,-117,-119,179,-75,-69,-73,-107,-110,-70,-111,-115,-72,-71,-116,-108,-109,-114,-112,-113,-7,]),'TO_LLAABRE':([1,27,79,94,187,190,193,],[3,72,110,144,-52,208,210,]),'OP_MENOS':([98,122,123,124,125,127,129,130,131,133,150,154,155,162,163,167,168,189,198,202,203,204,214,],[-68,-4,-3,-118,-5,-2,-6,160,-117,-119,-75,-69,-73,-70,-111,-115,-72,-71,-116,-114,-112,-113,-7,]),'PR_void':([15,],[35,]),'PR_square':([4,7,9,12,13,14,24,26,34,38,43,50,55,56,57,61,66,69,70,71,72,75,80,81,84,85,87,88,89,90,93,96,97,98,104,110,111,122,123,124,125,126,127,129,130,131,133,135,136,137,138,143,144,150,151,152,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,64,64,-36,-14,-67,64,-119,-65,-64,-66,64,-62,-63,-47,-15,-119,-119,64,64,64,-91,-100,-101,64,64,-119,-68,-92,-38,-24,-4,-3,-118,-5,-119,-2,-6,-119,-117,-119,-119,-119,64,64,-50,64,-75,-119,-119,-69,-73,64,-107,64,-110,-70,-111,64,64,64,-115,-72,-119,-48,-49,-99,-103,-55,-104,-57,-59,64,-54,-58,-56,-106,-71,-94,64,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'PR_color':([4,7,9,12,13,14,24,26,34,38,43,50,55,56,57,61,66,69,70,71,72,75,80,81,84,85,87,88,89,90,93,96,97,98,104,110,111,122,123,124,125,126,127,129,130,131,133,135,136,137,138,143,144,150,151,152,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,51,51,-36,-14,-67,51,-119,-65,-64,-66,51,-62,-63,-47,-15,-119,-119,51,51,51,-91,-100,-101,51,51,-119,-68,-92,-38,-24,-4,-3,-118,-5,-119,-2,-6,-119,-117,-119,-119,-119,51,51,-50,51,-75,-119,-119,-69,-73,51,-107,51,-110,-70,-111,51,51,51,-115,-72,-119,-48,-49,-99,-103,-55,-104,-57,-59,51,-54,-58,-56,-106,-71,-94,51,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'OP_DIV':([98,122,123,124,125,127,129,131,133,150,154,155,162,168,189,198,214,],[-68,-4,-3,-118,-5,-2,-6,-117,166,-75,-69,-73,-70,-72,-71,-116,-7,]),'PR_circle':([4,7,9,12,13,14,24,26,34,38,43,50,55,56,57,61,66,69,70,71,72,75,80,81,84,85,87,88,89,90,93,96,97,98,104,110,111,122,123,124,125,126,127,129,130,131,133,135,136,137,138,143,144,150,151,152,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,52,52,-36,-14,-67,52,-119,-65,-64,-66,52,-62,-63,-47,-15,-119,-119,52,52,52,-91,-100,-101,52,52,-119,-68,-92,-38,-24,-4,-3,-118,-5,-119,-2,-6,-119,-117,-119,-119,-119,52,52,-50,52,-75,-119,-119,-69,-73,52,-107,52,-110,-70,-111,52,52,52,-115,-72,-119,-48,-49,-99,-103,-55,-104,-57,-59,52,-54,-58,-56,-106,-71,-94,52,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'PR_size':([4,7,9,12,13,14,24,26,34,38,43,50,55,56,57,61,66,69,70,71,72,75,80,81,84,85,87,88,89,90,93,96,97,98,104,110,111,122,123,124,125,126,127,129,130,131,133,135,136,137,138,143,144,150,151,152,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,53,53,-36,-14,-67,53,-119,-65,-64,-66,53,-62,-63,-47,-15,-119,-119,53,53,53,-91,-100,-101,53,53,-119,-68,-92,-38,-24,-4,-3,-118,-5,-119,-2,-6,-119,-117,-119,-119,-119,53,53,-50,53,-75,-119,-119,-69,-73,53,-107,53,-110,-70,-111,53,53,53,-115,-72,-119,-48,-49,-99,-103,-55,-104,-57,-59,53,-54,-58,-56,-106,-71,-94,53,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'PR_speed':([4,7,9,12,13,14,24,26,34,38,43,50,55,57,61,66,69,70,71,72,75,88,98,104,110,111,122,123,124,125,127,129,130,131,133,135,136,143,144,150,152,154,155,159,161,162,163,167,168,172,173,175,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,45,45,-36,-14,-67,45,-65,-64,-66,45,-62,-63,-47,-15,-91,-68,-92,-38,-24,-4,-3,-118,-5,-2,-6,-119,-117,-119,-119,-119,-50,45,-75,-119,-69,-73,-107,-110,-70,-111,-115,-72,-99,-103,-104,-106,-71,-94,45,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'TO_CORCIERRA':([10,29,30,31,32,73,74,92,98,122,123,124,125,127,129,130,131,133,139,140,141,150,154,155,157,159,161,162,163,167,168,183,184,185,189,198,199,200,201,202,203,204,214,],[-119,-119,75,-19,-17,-20,-18,-119,-68,-4,-3,-118,-5,-2,-6,-119,-117,-119,-119,186,-33,-75,-69,-73,-119,-107,-110,-70,-111,-115,-72,-31,-34,-32,-71,-116,214,-108,-109,-114,-112,-113,-7,]),'TO_COMA':([10,29,32,73,78,92,98,99,122,123,124,125,127,129,130,131,133,135,136,139,150,154,155,157,159,161,162,163,167,168,172,173,175,182,183,184,189,191,192,197,198,200,201,202,203,204,205,206,214,],[28,28,-17,-20,107,138,-68,148,-4,-3,-118,-5,-2,-6,-119,-117,-119,-119,-119,138,-75,-69,-73,138,-107,-110,-70,-111,-115,-72,-99,-103,-104,-106,-31,-34,-71,148,-90,107,-116,-108,-109,-114,-112,-113,-102,-105,-7,]),'OP_DIFDE':([98,122,123,124,125,127,129,130,131,133,136,150,154,155,159,161,162,163,167,168,189,198,200,201,202,203,204,214,],[-68,-4,-3,-118,-5,-2,-6,-119,-117,-119,174,-75,-69,-73,-107,-110,-70,-111,-115,-72,-71,-116,-108,-109,-114,-112,-113,-7,]),'OP_MENOROIGUAL':([98,122,123,124,125,127,129,130,131,133,136,150,154,155,159,161,162,163,167,168,189,198,200,201,202,203,204,214,],[-68,-4,-3,-118,-5,-2,-6,-119,-117,-119,176,-75,-69,-73,-107,-110,-70,-111,-115,-72,-71,-116,-108,-109,-114,-112,-113,-7,]),'OP_MAYOROIGUAL':([98,122,123,124,125,127,129,130,131,133,136,150,154,155,159,161,162,163,167,168,189,198,200,201,202,203,204,214,],[-68,-4,-3,-118,-5,-2,-6,-119,-117,-119,177,-75,-69,-73,-107,-110,-70,-111,-115,-72,-71,-116,-108,-109,-114,-112,-113,-7,]),'PR_false':([56,80,81,84,85,87,89,90,93,96,97,126,137,138,151,158,160,164,165,166,169,170,171,174,176,177,178,179,180,181,],[-119,-119,-119,125,125,125,-100,-101,125,125,-119,-119,125,125,-119,125,125,125,125,125,-119,-48,-49,-55,-57,-59,125,-54,-58,-56,]),'TO_PARABRE':([48,51,52,53,56,62,63,64,65,68,77,80,81,84,85,87,89,90,93,96,97,126,129,137,138,151,158,160,164,165,166,169,170,171,174,176,177,178,179,180,181,],[81,83,84,85,-119,93,95,96,97,-51,106,-119,-119,126,126,126,-100,-101,126,126,-119,-119,95,126,126,-119,126,126,126,126,126,-119,-48,-49,-55,-57,-59,126,-54,-58,-56,]),'PR_main':([3,4,5,7,8,9,12,13,17,18,19,24,33,42,43,75,105,],[-119,-119,-119,-119,27,-10,-13,-16,-119,-8,-12,-9,-35,-11,-14,-15,-39,]),'PR_return':([4,7,9,12,13,14,24,26,34,38,43,50,55,57,61,66,69,70,71,72,75,88,98,104,110,111,122,123,124,125,127,129,130,131,133,135,136,143,144,150,152,154,155,159,161,162,163,167,168,172,173,175,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,56,56,-36,-14,-67,56,-65,-64,-66,56,-62,-63,-47,-15,-91,-68,-92,-38,-24,-4,-3,-118,-5,-2,-6,-119,-117,-119,-119,-119,-50,56,-75,-119,-69,-73,-107,-110,-70,-111,-115,-72,-99,-103,-104,-106,-71,-94,56,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'$end':([2,44,],[0,-1,]),'OP_RESID':([98,122,123,124,125,127,129,131,133,150,154,155,162,168,189,198,214,],[-68,-4,-3,-118,-5,-2,-6,-117,164,-75,-69,-73,-70,-72,-71,-116,-7,]),'PR_white':([83,],[114,]),'PR_num':([6,15,16,106,107,],[20,20,20,-37,20,]),'TO_CORABRE':([4,43,91,],[11,-14,137,]),'TO_NUM':([11,28,56,80,81,84,85,87,89,90,93,96,97,126,137,138,151,158,160,164,165,166,169,170,171,174,176,177,178,179,180,181,],[32,73,-119,-119,-119,127,127,127,-100,-101,127,127,-119,-119,127,127,-119,127,127,127,127,127,-119,-48,-49,-55,-57,-59,127,-54,-58,-56,]),'PR_arreglo':([4,7,9,12,13,14,24,26,34,38,43,50,55,56,57,61,66,69,70,71,72,75,80,81,84,85,87,88,89,90,93,96,97,98,104,110,111,122,123,124,125,126,127,129,130,131,133,135,136,137,138,143,144,150,151,152,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,58,58,-36,-14,-67,58,-119,-65,-64,-66,58,-62,-63,-47,-15,-119,-119,128,128,128,-91,-100,-101,128,128,-119,-68,-92,-38,-24,-4,-3,-118,-5,-119,-2,-6,-119,-117,-119,-119,-119,128,128,-50,58,-75,-119,-119,-69,-73,128,-107,128,-110,-70,-111,128,128,128,-115,-72,-119,-48,-49,-99,-103,-55,-104,-57,-59,128,-54,-58,-56,-106,-71,-94,58,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'TO_DOSPTOS':([101,],[151,]),'OP_MAS':([98,122,123,124,125,127,129,130,131,133,150,154,155,162,163,167,168,189,198,202,203,204,214,],[-68,-4,-3,-118,-5,-2,-6,158,-117,-119,-75,-69,-73,-70,-111,-115,-72,-71,-116,-114,-112,-113,-7,]),'PR_blue':([83,],[119,]),'PR_kameForw':([4,7,9,12,13,14,24,26,34,38,43,50,55,57,61,66,69,70,71,72,75,88,98,104,110,111,122,123,124,125,127,129,130,131,133,135,136,143,144,150,152,154,155,159,161,162,163,167,168,172,173,175,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,59,59,-36,-14,-67,59,-65,-64,-66,59,-62,-63,-47,-15,-91,-68,-92,-38,-24,-4,-3,-118,-5,-2,-6,-119,-117,-119,-119,-119,-50,59,-75,-119,-69,-73,-107,-110,-70,-111,-115,-72,-99,-103,-104,-106,-71,-94,59,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'PR_kameBack':([4,7,9,12,13,14,24,26,34,38,43,50,55,57,61,66,69,70,71,72,75,88,98,104,110,111,122,123,124,125,127,129,130,131,133,135,136,143,144,150,152,154,155,159,161,162,163,167,168,172,173,175,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,60,60,-36,-14,-67,60,-65,-64,-66,60,-62,-63,-47,-15,-91,-68,-92,-38,-24,-4,-3,-118,-5,-2,-6,-119,-117,-119,-119,-119,-50,60,-75,-119,-69,-73,-107,-110,-70,-111,-115,-72,-99,-103,-104,-106,-71,-94,60,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'PR_green':([83,],[120,]),'PR_flot':([6,15,16,106,107,],[23,23,23,-37,23,]),'PR_negacion':([56,80,81,97,126,151,169,170,171,],[89,89,89,89,89,89,89,-48,-49,]),'ID':([4,7,9,12,13,14,20,21,22,23,24,26,34,35,36,37,38,39,43,50,55,56,57,58,61,66,67,69,70,71,72,75,80,81,84,85,87,88,89,90,93,95,96,97,98,104,110,111,122,123,124,125,126,127,128,129,130,131,133,135,136,137,138,143,144,148,150,151,152,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-21,43,-23,-22,-9,63,63,-41,-40,77,-36,78,-14,-67,63,-119,-65,91,-64,-66,101,63,-62,-63,-47,-15,-119,-119,129,129,129,-91,-100,-101,129,-74,129,-119,-68,-92,-38,-24,-4,-3,-118,-5,-119,-2,91,-6,-119,-117,-119,-119,-119,129,129,-50,63,101,-75,-119,-119,197,-69,-73,129,-107,129,-110,-70,-111,129,129,129,-115,-72,-119,-48,-49,-99,-103,-55,-104,-57,-59,129,-54,-58,-56,-106,-71,-94,63,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'OP_MULT':([98,122,123,124,125,127,129,131,133,150,154,155,162,168,189,198,214,],[-68,-4,-3,-118,-5,-2,-6,-117,165,-75,-69,-73,-70,-72,-71,-116,-7,]),'TO_LLACIERRA':([25,47,49,76,82,86,103,188,211,],[44,-61,82,105,-46,-60,152,207,215,]),'PR_orange':([83,],[113,]),'PR_if':([4,7,9,12,13,14,24,26,34,38,43,50,55,57,61,66,69,70,71,72,75,88,98,104,110,111,122,123,124,125,127,129,130,131,133,135,136,143,144,150,152,154,155,159,161,162,163,167,168,172,173,175,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,65,65,-36,-14,-67,65,-65,-64,-66,65,-62,-63,-47,-15,-91,-68,-92,-38,-24,-4,-3,-118,-5,-2,-6,-119,-117,-119,-119,-119,-50,65,-75,-119,-69,-73,-107,-110,-70,-111,-115,-72,-99,-103,-104,-106,-71,-94,65,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'OP_MAYORQUE':([98,122,123,124,125,127,129,130,131,133,136,150,154,155,159,161,162,163,167,168,189,198,200,201,202,203,204,214,],[-68,-4,-3,-118,-5,-2,-6,-119,-117,-119,180,-75,-69,-73,-107,-110,-70,-111,-115,-72,-71,-116,-108,-109,-114,-112,-113,-7,]),'PR_black':([83,],[118,]),'OP_MENORQUE':([98,122,123,124,125,127,129,130,131,133,136,150,154,155,159,161,162,163,167,168,189,198,200,201,202,203,204,214,],[-68,-4,-3,-118,-5,-2,-6,-119,-117,-119,181,-75,-69,-73,-107,-110,-70,-111,-115,-72,-71,-116,-108,-109,-114,-112,-113,-7,]),'PR_red':([83,],[116,]),'PR_bool':([6,15,16,106,107,],[22,22,22,-37,22,]),'PR_loop':([4,7,9,12,13,14,24,26,34,38,43,50,55,57,61,66,69,70,71,72,75,88,98,104,110,111,122,123,124,125,127,129,130,131,133,135,136,143,144,150,152,154,155,159,161,162,163,167,168,172,173,175,182,189,194,195,196,198,200,201,202,203,204,205,206,207,208,210,212,214,215,],[-119,-119,-10,-13,-16,-119,-9,68,68,-36,-14,-67,68,-65,-64,-66,68,-62,-63,-47,-15,-91,-68,-92,-38,-24,-4,-3,-118,-5,-2,-6,-119,-117,-119,-119,-119,-50,68,-75,-119,-69,-73,-107,-110,-70,-111,-115,-72,-99,-103,-104,-106,-71,-94,68,-96,-116,-108,-109,-114,-112,-113,-102,-105,-53,-93,-97,-95,-7,-98,]),'TO_PARCIERRA':([16,40,41,67,78,95,98,99,100,102,106,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,130,131,132,133,134,135,136,142,145,146,147,149,150,154,155,156,159,161,162,163,167,168,172,173,175,182,189,191,192,197,198,200,201,202,203,204,205,206,209,213,214,],[-119,79,-43,-119,-119,-74,-68,-119,150,-87,-37,-45,-42,154,-82,-84,155,-78,-81,-85,-80,-79,-83,-4,-3,-118,-5,-2,-6,-119,-117,162,-119,168,-119,-119,187,189,190,-86,-89,-75,-69,-73,198,-107,-110,-70,-111,-115,-72,-99,-103,-104,-106,-71,-119,-90,-119,-116,-108,-109,-114,-112,-113,-102,-105,-88,-44,-7,]),'PR_violet':([83,],[117,]),'PR_yellow':([83,],[121,]),'OP_IGUAL':([45,46,54,59,60,63,186,],[-30,80,-29,-27,-28,-25,-26,]),'PR_program':([0,],[1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decideType':([15,],[37,]),'megaExp':([56,80,81,97,126,151,169,],[88,111,112,146,156,192,205,]),'maybeElse':([152,],[194,]),'mainBlock':([8,],[25,]),'assignTo':([26,34,55,69,144,195,],[46,46,46,46,46,46,]),'opRelacional':([136,],[178,]),'superExp':([87,],[135,]),'mainBlock1':([8,],[26,]),'unParam':([67,148,],[99,191,]),'return':([26,34,55,69,144,195,],[57,57,57,57,57,57,]),'moreDimCreate':([10,29,],[30,74,]),'maybeNot':([56,80,81,97,126,151,169,],[87,87,87,87,87,87,87,]),'bloque':([26,34,55,69,144,195,],[49,76,86,103,188,211,]),'func12':([16,],[38,]),'func11':([5,17,],[16,16,]),'decVar':([3,7,14,26,34,55,69,144,195,],[5,24,34,50,50,50,50,50,50,]),'tipo':([6,15,16,107,],[21,36,39,153,]),'colorChoice':([83,],[115,]),'unaDimCreate':([10,29,],[29,29,]),'estructura':([26,34,55,69,144,195,],[55,55,55,55,55,55,]),'params':([16,],[40,]),'unaDim':([92,139,157,],[139,139,139,]),'var':([3,7,14,26,34,55,69,144,195,],[7,7,7,7,7,7,7,7,7,]),'paramVals':([67,],[100,]),'anotherMega':([135,],[172,]),'moreDimIndex':([92,139,157,],[140,185,199,]),'empty':([3,4,5,7,10,14,16,17,26,29,34,55,56,67,69,78,80,81,92,97,99,126,130,133,135,136,139,144,151,152,157,169,191,195,197,],[9,13,19,9,31,9,41,19,9,31,9,9,90,102,9,108,90,90,141,90,149,90,161,167,173,182,141,9,90,196,141,90,149,9,108,]),'func2':([14,],[33,]),'func1':([5,17,],[14,14,]),'var1':([3,7,14,26,34,55,69,144,195,],[4,4,4,4,4,4,4,4,4,]),'opLogico':([135,],[169,]),'doElse':([195,],[212,]),'prog':([0,],[2,]),'func':([5,17,],[17,17,]),'compara2':([69,],[104,]),'loop3':([94,],[143,]),'loop2':([62,],[94,]),'loop1':([26,34,55,69,144,195,],[62,62,62,62,62,62,]),'firstIndex':([58,128,],[92,157,]),'decFunc':([5,17,],[18,42,]),'firstCreate':([4,],[10,]),'anotherTerm':([133,],[163,]),'term':([84,85,87,93,96,137,138,158,160,164,165,166,178,],[130,130,130,130,130,130,130,130,130,202,203,204,130,]),'val':([84,85,87,93,96,137,138,158,160,164,165,166,178,],[124,124,124,124,124,124,124,124,124,124,124,124,124,]),'funcCall':([26,34,55,69,84,85,87,93,96,137,138,144,158,160,164,165,166,178,195,],[66,66,66,66,131,131,131,131,131,131,131,66,131,131,131,131,131,131,66,]),'maybeRel':([136,],[175,]),'arrayCreate':([4,],[12,]),'checkElse':([152,],[195,]),'assign':([26,34,55,69,144,195,],[70,70,70,70,70,70,]),'funcCall2':([67,],[98,]),'funcCall1':([26,34,55,69,84,85,87,93,96,137,138,144,158,160,164,165,166,178,195,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'anotherExp':([130,],[159,]),'fact':([84,85,87,93,96,137,138,158,160,164,165,166,178,],[133,133,133,133,133,133,133,133,133,133,133,133,133,]),'exp':([84,85,87,93,96,137,138,158,160,178,],[132,134,136,142,145,183,184,200,201,206,]),'moreParams':([78,197,],[109,213,]),'comparacion':([26,34,55,69,144,195,],[61,61,61,61,61,61,]),'compara1':([26,34,55,69,144,195,],[69,69,69,69,69,69,]),'moreParamVals':([99,191,],[147,209,]),'declare':([3,],[8,]),'loop':([26,34,55,69,144,195,],[71,71,71,71,71,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR_program TO_LLAABRE declare mainBlock TO_LLACIERRA','prog',5,'p_prog','compisv3.py',405),
  ('val -> TO_NUM','val',1,'p_val','compisv3.py',412),
  ('val -> TO_FLOT','val',1,'p_val','compisv3.py',413),
  ('val -> PR_true','val',1,'p_val','compisv3.py',414),
  ('val -> PR_false','val',1,'p_val','compisv3.py',415),
  ('val -> ID','val',1,'p_val','compisv3.py',416),
  ('val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA','val',4,'p_val','compisv3.py',417),
  ('declare -> decVar decFunc','declare',2,'p_declare','compisv3.py',480),
  ('decVar -> var decVar','decVar',2,'p_decVar','compisv3.py',485),
  ('decVar -> empty','decVar',1,'p_decVar','compisv3.py',486),
  ('decFunc -> func decFunc','decFunc',2,'p_decFunc','compisv3.py',490),
  ('decFunc -> empty','decFunc',1,'p_decFunc','compisv3.py',491),
  ('var -> var1 arrayCreate','var',2,'p_var','compisv3.py',495),
  ('var1 -> PR_var tipo ID','var1',3,'p_var1','compisv3.py',511),
  ('arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA','arrayCreate',3,'p_arrayCreate','compisv3.py',528),
  ('arrayCreate -> empty','arrayCreate',1,'p_arrayCreate','compisv3.py',529),
  ('firstCreate -> TO_CORABRE TO_NUM','firstCreate',2,'p_firstCreate','compisv3.py',549),
  ('moreDimCreate -> unaDimCreate moreDimCreate','moreDimCreate',2,'p_moreDimCreate','compisv3.py',557),
  ('moreDimCreate -> empty','moreDimCreate',1,'p_moreDimCreate','compisv3.py',558),
  ('unaDimCreate -> TO_COMA TO_NUM','unaDimCreate',2,'p_unaDimCreate','compisv3.py',562),
  ('tipo -> PR_num','tipo',1,'p_tipo','compisv3.py',571),
  ('tipo -> PR_flot','tipo',1,'p_tipo','compisv3.py',572),
  ('tipo -> PR_bool','tipo',1,'p_tipo','compisv3.py',573),
  ('assign -> assignTo OP_IGUAL megaExp','assign',3,'p_assign','compisv3.py',577),
  ('assignTo -> ID','assignTo',1,'p_assignTo','compisv3.py',644),
  ('assignTo -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA','assignTo',4,'p_assignTo','compisv3.py',645),
  ('assignTo -> PR_kameForw','assignTo',1,'p_assignTo','compisv3.py',646),
  ('assignTo -> PR_kameBack','assignTo',1,'p_assignTo','compisv3.py',647),
  ('assignTo -> PR_kameRot','assignTo',1,'p_assignTo','compisv3.py',648),
  ('assignTo -> PR_speed','assignTo',1,'p_assignTo','compisv3.py',649),
  ('firstIndex -> ID TO_CORABRE exp','firstIndex',3,'p_firstIndex','compisv3.py',684),
  ('moreDimIndex -> unaDim moreDimIndex','moreDimIndex',2,'p_moreDimIndex','compisv3.py',727),
  ('moreDimIndex -> empty','moreDimIndex',1,'p_moreDimIndex','compisv3.py',728),
  ('unaDim -> TO_COMA exp','unaDim',2,'p_unaDim','compisv3.py',731),
  ('func -> func1 func2','func',2,'p_func','compisv3.py',800),
  ('func1 -> func11 func12','func1',2,'p_func1','compisv3.py',804),
  ('func11 -> PR_function decideType ID TO_PARABRE','func11',4,'p_func11','compisv3.py',808),
  ('func12 -> params TO_PARCIERRA TO_LLAABRE','func12',3,'p_func12','compisv3.py',825),
  ('func2 -> decVar bloque TO_LLACIERRA','func2',3,'p_func2','compisv3.py',828),
  ('decideType -> tipo','decideType',1,'p_decideType','compisv3.py',832),
  ('decideType -> PR_void','decideType',1,'p_decideType','compisv3.py',833),
  ('params -> tipo ID moreParams','params',3,'p_params','compisv3.py',838),
  ('params -> empty','params',1,'p_params','compisv3.py',839),
  ('moreParams -> TO_COMA tipo ID moreParams','moreParams',4,'p_moreParams','compisv3.py',845),
  ('moreParams -> empty','moreParams',1,'p_moreParams','compisv3.py',846),
  ('mainBlock -> mainBlock1 bloque TO_LLACIERRA','mainBlock',3,'p_mainBlock','compisv3.py',852),
  ('mainBlock1 -> PR_main TO_LLAABRE','mainBlock1',2,'p_mainBlock1','compisv3.py',855),
  ('opLogico -> PR_interseccion','opLogico',1,'p_opLogico','compisv3.py',862),
  ('opLogico -> PR_union','opLogico',1,'p_opLogico','compisv3.py',863),
  ('loop -> loop1 loop2 loop3','loop',3,'p_loop','compisv3.py',871),
  ('loop1 -> PR_loop','loop1',1,'p_loop1','compisv3.py',882),
  ('loop2 -> TO_PARABRE exp TO_PARCIERRA','loop2',3,'p_loop2','compisv3.py',889),
  ('loop3 -> TO_LLAABRE bloque TO_LLACIERRA','loop3',3,'p_loop3','compisv3.py',905),
  ('opRelacional -> OP_DOBLEIGUAL','opRelacional',1,'p_opRelacional','compisv3.py',908),
  ('opRelacional -> OP_DIFDE','opRelacional',1,'p_opRelacional','compisv3.py',909),
  ('opRelacional -> OP_MENORQUE','opRelacional',1,'p_opRelacional','compisv3.py',910),
  ('opRelacional -> OP_MENOROIGUAL','opRelacional',1,'p_opRelacional','compisv3.py',911),
  ('opRelacional -> OP_MAYORQUE','opRelacional',1,'p_opRelacional','compisv3.py',912),
  ('opRelacional -> OP_MAYOROIGUAL','opRelacional',1,'p_opRelacional','compisv3.py',913),
  ('bloque -> estructura bloque','bloque',2,'p_bloque','compisv3.py',920),
  ('bloque -> TO_UWU','bloque',1,'p_bloque','compisv3.py',921),
  ('estructura -> assign','estructura',1,'p_estructura','compisv3.py',924),
  ('estructura -> loop','estructura',1,'p_estructura','compisv3.py',925),
  ('estructura -> comparacion','estructura',1,'p_estructura','compisv3.py',926),
  ('estructura -> return','estructura',1,'p_estructura','compisv3.py',927),
  ('estructura -> funcCall','estructura',1,'p_estructura','compisv3.py',928),
  ('estructura -> decVar','estructura',1,'p_estructura','compisv3.py',929),
  ('funcCall -> funcCall1 funcCall2','funcCall',2,'p_funcCall','compisv3.py',933),
  ('funcCall -> PR_draw TO_PARABRE megaExp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv3.py',934),
  ('funcCall -> PR_circle TO_PARABRE exp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv3.py',935),
  ('funcCall -> PR_square TO_PARABRE exp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv3.py',936),
  ('funcCall -> PR_size TO_PARABRE exp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv3.py',937),
  ('funcCall -> PR_color TO_PARABRE colorChoice TO_PARCIERRA','funcCall',4,'p_funcCall','compisv3.py',938),
  ('funcCall1 -> ID TO_PARABRE','funcCall1',2,'p_funcCall1','compisv3.py',960),
  ('funcCall2 -> paramVals TO_PARCIERRA','funcCall2',2,'p_funcCall2','compisv3.py',970),
  ('bool -> PR_true','bool',1,'p_bool','compisv3.py',986),
  ('bool -> PR_false','bool',1,'p_bool','compisv3.py',987),
  ('colorChoice -> PR_red','colorChoice',1,'p_colorChoice','compisv3.py',990),
  ('colorChoice -> PR_green','colorChoice',1,'p_colorChoice','compisv3.py',991),
  ('colorChoice -> PR_blue','colorChoice',1,'p_colorChoice','compisv3.py',992),
  ('colorChoice -> PR_violet','colorChoice',1,'p_colorChoice','compisv3.py',993),
  ('colorChoice -> PR_orange','colorChoice',1,'p_colorChoice','compisv3.py',994),
  ('colorChoice -> PR_yellow','colorChoice',1,'p_colorChoice','compisv3.py',995),
  ('colorChoice -> PR_white','colorChoice',1,'p_colorChoice','compisv3.py',996),
  ('colorChoice -> PR_black','colorChoice',1,'p_colorChoice','compisv3.py',997),
  ('paramVals -> unParam moreParamVals','paramVals',2,'p_paramVals','compisv3.py',1001),
  ('paramVals -> empty','paramVals',1,'p_paramVals','compisv3.py',1002),
  ('moreParamVals -> TO_COMA unParam moreParamVals','moreParamVals',3,'p_moreParamVals','compisv3.py',1005),
  ('moreParamVals -> empty','moreParamVals',1,'p_moreParamVals','compisv3.py',1006),
  ('unParam -> ID TO_DOSPTOS megaExp','unParam',3,'p_unParam','compisv3.py',1009),
  ('return -> PR_return megaExp','return',2,'p_return','compisv3.py',1032),
  ('comparacion -> compara1 compara2','comparacion',2,'p_comparacion','compisv3.py',1043),
  ('compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE','compara1',5,'p_compara1','compisv3.py',1047),
  ('compara2 -> bloque TO_LLACIERRA maybeElse','compara2',3,'p_compara2','compisv3.py',1059),
  ('maybeElse -> checkElse doElse','maybeElse',2,'p_maybeElse','compisv3.py',1066),
  ('maybeElse -> empty','maybeElse',1,'p_maybeElse','compisv3.py',1067),
  ('checkElse -> PR_else TO_LLAABRE','checkElse',2,'p_checkElse','compisv3.py',1071),
  ('doElse -> bloque TO_LLACIERRA','doElse',2,'p_doElse','compisv3.py',1080),
  ('megaExp -> maybeNot superExp anotherMega','megaExp',3,'p_megaExp','compisv3.py',1083),
  ('maybeNot -> PR_negacion','maybeNot',1,'p_maybeNot','compisv3.py',1117),
  ('maybeNot -> empty','maybeNot',1,'p_maybeNot','compisv3.py',1118),
  ('anotherMega -> opLogico megaExp','anotherMega',2,'p_anotherMega','compisv3.py',1124),
  ('anotherMega -> empty','anotherMega',1,'p_anotherMega','compisv3.py',1125),
  ('superExp -> exp maybeRel','superExp',2,'p_superExp','compisv3.py',1128),
  ('maybeRel -> opRelacional exp','maybeRel',2,'p_maybeRel','compisv3.py',1132),
  ('maybeRel -> empty','maybeRel',1,'p_maybeRel','compisv3.py',1133),
  ('exp -> term anotherExp','exp',2,'p_exp','compisv3.py',1156),
  ('anotherExp -> OP_MAS exp','anotherExp',2,'p_anotherExp','compisv3.py',1183),
  ('anotherExp -> OP_MENOS exp','anotherExp',2,'p_anotherExp','compisv3.py',1184),
  ('anotherExp -> empty','anotherExp',1,'p_anotherExp','compisv3.py',1185),
  ('term -> fact anotherTerm','term',2,'p_term','compisv3.py',1191),
  ('anotherTerm -> OP_MULT term','anotherTerm',2,'p_anotherTerm','compisv3.py',1217),
  ('anotherTerm -> OP_DIV term','anotherTerm',2,'p_anotherTerm','compisv3.py',1218),
  ('anotherTerm -> OP_RESID term','anotherTerm',2,'p_anotherTerm','compisv3.py',1219),
  ('anotherTerm -> empty','anotherTerm',1,'p_anotherTerm','compisv3.py',1220),
  ('fact -> TO_PARABRE megaExp TO_PARCIERRA','fact',3,'p_fact','compisv3.py',1226),
  ('fact -> funcCall','fact',1,'p_fact','compisv3.py',1227),
  ('fact -> val','fact',1,'p_fact','compisv3.py',1228),
  ('empty -> <empty>','empty',0,'p_empty','compisv3.py',1233),
]
