
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ID OP_DIFDE OP_DIV OP_DOBLEIGUAL OP_IGUAL OP_MAS OP_MAYOROIGUAL OP_MAYORQUE OP_MENOROIGUAL OP_MENORQUE OP_MENOS OP_MULT OP_RESID PR_arreglo PR_black PR_blue PR_bool PR_circle PR_color PR_draw PR_else PR_end PR_false PR_flot PR_function PR_green PR_home PR_if PR_interseccion PR_kameBack PR_kameForw PR_kameRot PR_loop PR_main PR_negacion PR_num PR_orange PR_program PR_red PR_return PR_size PR_speed PR_square PR_true PR_union PR_var PR_violet PR_void PR_white PR_yellow TO_COMA TO_CORABRE TO_CORCIERRA TO_DIGIT TO_DOSPTOS TO_FLOT TO_LLAABRE TO_LLACIERRA TO_NUM TO_PARABRE TO_PARCIERRA TO_UWUprog : PR_program TO_LLAABRE declare mainBlock TO_LLACIERRAval :  TO_NUM\n\t\t\t| TO_FLOT\n\t\t\t| PR_true\n\t\t\t| PR_false\n\t\t\t| ID \n\t\t\t| PR_arreglo firstIndex moreDimIndex TO_CORCIERRAdeclare : decVar decFunc decVar : var decVar \n\t\t\t\t| empty decFunc : func decFunc \n\t\t\t\t| emptyvar : var1 arrayCreatevar1 :  PR_var tipo IDarrayCreate : firstCreate moreDimCreate TO_CORCIERRA \n \t\t\t\t   | emptyfirstCreate : TO_CORABRE TO_NUMmoreDimCreate : TO_COMA TO_NUM moreDimCreate\n \t\t\t\t\t | emptytipo : PR_num \n\t\t\t| PR_flot\n\t\t\t| PR_bool assign : assignTo OP_IGUAL megaExpassignTo : ID\n\t\t\t\t| PR_arreglo firstIndex moreDimIndex TO_CORCIERRA\n\t\t\t\t| PR_kameForw\n\t\t\t\t| PR_kameBack\n\t\t\t\t| PR_kameRot\n\t\t\t\t| PR_speedfirstIndex : ID TO_CORABRE expmoreDimIndex : unaDim moreDimIndex\n\t\t\t\t\t | emptyunaDim : TO_COMA expfunc : func1 func2func1 : func11 func12func11 : PR_function decideType ID TO_PARABREfunc12 : params TO_PARCIERRA TO_LLAABREfunc2 : decVar bloque TO_LLACIERRAdecideType : tipo \n\t\t\t\t  | PR_voidparams : tipo ID moreParams\n\t\t\t  | emptymoreParams : TO_COMA tipo ID moreParams \n\t\t\t  | emptymainBlock : mainBlock1 bloque TO_LLACIERRAmainBlock1 : PR_main TO_LLAABREopLogico : PR_interseccion \n\t\t\t\t| PR_unionloop : loop1 loop2 loop3loop1 : PR_looploop2 : TO_PARABRE exp TO_PARCIERRAloop3 : TO_LLAABRE bloque TO_LLACIERRAopRelacional : OP_DOBLEIGUAL \n\t\t\t\t\t\t| OP_DIFDE \n\t\t\t\t\t\t| OP_MENORQUE \n\t\t\t\t\t\t| OP_MENOROIGUAL \n\t\t\t\t\t\t| OP_MAYORQUE \n\t\t\t\t\t\t| OP_MAYOROIGUALbloque : estructura bloque \n\t\t\t  | TO_UWUestructura : assign \n\t\t\t\t  | loop \n\t\t\t\t  | comparacion\n\t\t\t\t  | return \n\t\t\t\t  | funcCall \n\t\t\t\t  | decVarfuncCall : funcCall1 funcCall2\n\t\t\t\t| PR_draw TO_PARABRE megaExp TO_PARCIERRA \n\t\t\t\t| PR_circle TO_PARABRE exp TO_PARCIERRA \n\t\t\t\t| PR_square TO_PARABRE exp TO_PARCIERRA \n\t\t\t\t| PR_size TO_PARABRE exp TO_PARCIERRA \n\t\t\t\t| PR_color TO_PARABRE colorChoice TO_PARCIERRA funcCall1 : ID TO_PARABREfuncCall2 : paramVals TO_PARCIERRAbool : PR_true \n\t\t\t| PR_falsecolorChoice : PR_red \n\t\t\t\t   | PR_green\n\t\t\t\t   | PR_blue \n\t\t\t\t   | PR_violet \n\t\t\t\t   | PR_orange \n\t\t\t\t   | PR_yellow \n\t\t\t\t   | PR_white \n\t\t\t\t   | PR_blackparamVals : unParam moreParamVals \n\t\t\t\t | emptymoreParamVals : TO_COMA unParam moreParamVals \n\t\t\t\t \t | emptyunParam : ID TO_DOSPTOS megaExpreturn : PR_return megaExpcomparacion : compara1 compara2compara1 : PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABREcompara2 : bloque TO_LLACIERRA maybeElsemaybeElse : checkElse doElse \n\t\t\t\t | emptycheckElse : PR_else TO_LLAABREdoElse : bloque TO_LLACIERRAmegaExp : maybeNot superExp anotherMegamaybeNot : PR_negacion \n\t\t\t\t| emptyanotherMega : opLogico megaExp \n\t\t\t\t   | emptysuperExp : exp maybeRelmaybeRel : opRelacional exp \n\t\t\t\t| emptyexp : term anotherExpanotherExp : OP_MAS exp \n\t\t\t\t  | OP_MENOS exp \n\t\t\t\t  | emptyterm : fact anotherTermanotherTerm : OP_MULT term \n\t\t\t\t   | OP_DIV term\n\t\t\t\t   | OP_RESID term\n\t\t\t\t   | emptyfact : TO_PARABRE megaExp TO_PARCIERRA \n\t\t\t| funcCall \n\t\t\t| valempty :'
    
_lr_action_items = {'PR_function':([3,4,5,7,9,12,13,17,24,32,42,73,104,],[-118,-118,15,-118,-10,-13,-16,15,-9,-34,-14,-15,-38,]),'PR_union':([96,121,122,123,124,126,128,129,130,132,134,135,149,153,154,158,160,161,162,166,167,174,181,188,197,199,200,201,202,203,205,213,],[-67,-4,-3,-117,-5,-2,-6,-118,-116,-118,170,-118,-74,-68,-72,-106,-109,-69,-110,-114,-71,-103,-105,-70,-115,-107,-108,-113,-111,-112,-104,-7,]),'PR_draw':([4,7,9,12,13,14,24,26,33,37,42,49,54,55,56,60,65,68,69,70,71,73,78,79,82,83,85,86,87,88,91,94,95,96,102,109,110,121,122,123,124,125,126,128,129,130,132,134,135,136,137,142,143,149,150,151,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,47,47,-35,-14,-66,47,-118,-64,-63,-65,47,-61,-62,-46,-15,-118,-118,47,47,47,-90,-99,-100,47,47,-118,-67,-91,-37,-23,-4,-3,-117,-5,-118,-2,-6,-118,-116,-118,-118,-118,47,47,-49,47,-74,-118,-118,-68,-72,47,-106,47,-109,-69,-110,47,47,47,-114,-71,-118,-47,-48,-98,-102,-54,-103,-56,-58,47,-53,-57,-55,-105,-70,-93,47,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'PR_else':([151,],[192,]),'PR_kameRot':([4,7,9,12,13,14,24,26,33,37,42,49,54,56,60,65,68,69,70,71,73,86,96,102,109,110,121,122,123,124,126,128,129,130,132,134,135,142,143,149,151,153,154,158,160,161,162,166,167,171,172,174,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,53,53,-35,-14,-66,53,-64,-63,-65,53,-61,-62,-46,-15,-90,-67,-91,-37,-23,-4,-3,-117,-5,-2,-6,-118,-116,-118,-118,-118,-49,53,-74,-118,-68,-72,-106,-109,-69,-110,-114,-71,-98,-102,-103,-105,-70,-93,53,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'PR_true':([55,78,79,82,83,85,87,88,91,94,95,125,136,137,150,157,159,163,164,165,168,169,170,173,175,176,177,178,179,180,],[-118,-118,-118,121,121,121,-99,-100,121,121,-118,-118,121,121,-118,121,121,121,121,121,-118,-47,-48,-54,-56,-58,121,-53,-57,-55,]),'TO_FLOT':([55,78,79,82,83,85,87,88,91,94,95,125,136,137,150,157,159,163,164,165,168,169,170,173,175,176,177,178,179,180,],[-118,-118,-118,122,122,122,-99,-100,122,122,-118,-118,122,122,-118,122,122,122,122,122,-118,-47,-48,-54,-56,-58,122,-53,-57,-55,]),'PR_interseccion':([96,121,122,123,124,126,128,129,130,132,134,135,149,153,154,158,160,161,162,166,167,174,181,188,197,199,200,201,202,203,205,213,],[-67,-4,-3,-117,-5,-2,-6,-118,-116,-118,169,-118,-74,-68,-72,-106,-109,-69,-110,-114,-71,-103,-105,-70,-115,-107,-108,-113,-111,-112,-104,-7,]),'TO_UWU':([4,7,9,12,13,14,24,26,33,37,42,49,54,56,60,65,68,69,70,71,73,86,96,102,109,110,121,122,123,124,126,128,129,130,132,134,135,142,143,149,151,153,154,158,160,161,162,166,167,171,172,174,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,46,46,-35,-14,-66,46,-64,-63,-65,46,-61,-62,-46,-15,-90,-67,-91,-37,-23,-4,-3,-117,-5,-2,-6,-118,-116,-118,-118,-118,-49,46,-74,-118,-68,-72,-106,-109,-69,-110,-114,-71,-98,-102,-103,-105,-70,-93,46,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'PR_var':([3,4,7,9,12,13,14,24,26,33,37,42,49,54,56,60,65,68,69,70,71,73,86,96,102,109,110,121,122,123,124,126,128,129,130,132,134,135,142,143,149,151,153,154,158,160,161,162,166,167,171,172,174,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[6,-118,6,-10,-13,-16,6,-9,6,6,-35,-14,-66,6,-64,-63,-65,6,-61,-62,-46,-15,-90,-67,-91,-37,-23,-4,-3,-117,-5,-2,-6,-118,-116,-118,-118,-118,-49,6,-74,-118,-68,-72,-106,-109,-69,-110,-114,-71,-98,-102,-103,-105,-70,-93,6,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'OP_DOBLEIGUAL':([96,121,122,123,124,126,128,129,130,132,135,149,153,154,158,160,161,162,166,167,188,197,199,200,201,202,203,213,],[-67,-4,-3,-117,-5,-2,-6,-118,-116,-118,178,-74,-68,-72,-106,-109,-69,-110,-114,-71,-70,-115,-107,-108,-113,-111,-112,-7,]),'TO_LLAABRE':([1,27,77,92,186,189,192,],[3,71,109,143,-51,207,209,]),'OP_MENOS':([96,121,122,123,124,126,128,129,130,132,149,153,154,161,162,166,167,188,197,201,202,203,213,],[-67,-4,-3,-117,-5,-2,-6,159,-116,-118,-74,-68,-72,-69,-110,-114,-71,-70,-115,-113,-111,-112,-7,]),'PR_void':([15,],[34,]),'PR_square':([4,7,9,12,13,14,24,26,33,37,42,49,54,55,56,60,65,68,69,70,71,73,78,79,82,83,85,86,87,88,91,94,95,96,102,109,110,121,122,123,124,125,126,128,129,130,132,134,135,136,137,142,143,149,150,151,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,63,63,-35,-14,-66,63,-118,-64,-63,-65,63,-61,-62,-46,-15,-118,-118,63,63,63,-90,-99,-100,63,63,-118,-67,-91,-37,-23,-4,-3,-117,-5,-118,-2,-6,-118,-116,-118,-118,-118,63,63,-49,63,-74,-118,-118,-68,-72,63,-106,63,-109,-69,-110,63,63,63,-114,-71,-118,-47,-48,-98,-102,-54,-103,-56,-58,63,-53,-57,-55,-105,-70,-93,63,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'PR_color':([4,7,9,12,13,14,24,26,33,37,42,49,54,55,56,60,65,68,69,70,71,73,78,79,82,83,85,86,87,88,91,94,95,96,102,109,110,121,122,123,124,125,126,128,129,130,132,134,135,136,137,142,143,149,150,151,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,50,50,-35,-14,-66,50,-118,-64,-63,-65,50,-61,-62,-46,-15,-118,-118,50,50,50,-90,-99,-100,50,50,-118,-67,-91,-37,-23,-4,-3,-117,-5,-118,-2,-6,-118,-116,-118,-118,-118,50,50,-49,50,-74,-118,-118,-68,-72,50,-106,50,-109,-69,-110,50,50,50,-114,-71,-118,-47,-48,-98,-102,-54,-103,-56,-58,50,-53,-57,-55,-105,-70,-93,50,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'OP_DIV':([96,121,122,123,124,126,128,130,132,149,153,154,161,167,188,197,213,],[-67,-4,-3,-117,-5,-2,-6,-116,165,-74,-68,-72,-69,-71,-70,-115,-7,]),'PR_circle':([4,7,9,12,13,14,24,26,33,37,42,49,54,55,56,60,65,68,69,70,71,73,78,79,82,83,85,86,87,88,91,94,95,96,102,109,110,121,122,123,124,125,126,128,129,130,132,134,135,136,137,142,143,149,150,151,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,51,51,-35,-14,-66,51,-118,-64,-63,-65,51,-61,-62,-46,-15,-118,-118,51,51,51,-90,-99,-100,51,51,-118,-67,-91,-37,-23,-4,-3,-117,-5,-118,-2,-6,-118,-116,-118,-118,-118,51,51,-49,51,-74,-118,-118,-68,-72,51,-106,51,-109,-69,-110,51,51,51,-114,-71,-118,-47,-48,-98,-102,-54,-103,-56,-58,51,-53,-57,-55,-105,-70,-93,51,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'PR_size':([4,7,9,12,13,14,24,26,33,37,42,49,54,55,56,60,65,68,69,70,71,73,78,79,82,83,85,86,87,88,91,94,95,96,102,109,110,121,122,123,124,125,126,128,129,130,132,134,135,136,137,142,143,149,150,151,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,52,52,-35,-14,-66,52,-118,-64,-63,-65,52,-61,-62,-46,-15,-118,-118,52,52,52,-90,-99,-100,52,52,-118,-67,-91,-37,-23,-4,-3,-117,-5,-118,-2,-6,-118,-116,-118,-118,-118,52,52,-49,52,-74,-118,-118,-68,-72,52,-106,52,-109,-69,-110,52,52,52,-114,-71,-118,-47,-48,-98,-102,-54,-103,-56,-58,52,-53,-57,-55,-105,-70,-93,52,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'PR_speed':([4,7,9,12,13,14,24,26,33,37,42,49,54,56,60,65,68,69,70,71,73,86,96,102,109,110,121,122,123,124,126,128,129,130,132,134,135,142,143,149,151,153,154,158,160,161,162,166,167,171,172,174,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,44,44,-35,-14,-66,44,-64,-63,-65,44,-61,-62,-46,-15,-90,-67,-91,-37,-23,-4,-3,-117,-5,-2,-6,-118,-116,-118,-118,-118,-49,44,-74,-118,-68,-72,-106,-109,-69,-110,-114,-71,-98,-102,-103,-105,-70,-93,44,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'TO_CORCIERRA':([10,29,30,31,72,90,96,103,121,122,123,124,126,128,129,130,132,138,139,140,149,153,154,156,158,160,161,162,166,167,182,183,184,188,197,198,199,200,201,202,203,213,],[-118,73,-19,-17,-118,-118,-67,-18,-4,-3,-117,-5,-2,-6,-118,-116,-118,-118,185,-32,-74,-68,-72,-118,-106,-109,-69,-110,-114,-71,-30,-33,-31,-70,-115,213,-107,-108,-113,-111,-112,-7,]),'TO_COMA':([10,31,72,76,90,96,97,121,122,123,124,126,128,129,130,132,134,135,138,149,153,154,156,158,160,161,162,166,167,171,172,174,181,182,183,188,190,191,196,197,199,200,201,202,203,204,205,213,],[28,-17,28,106,137,-67,147,-4,-3,-117,-5,-2,-6,-118,-116,-118,-118,-118,137,-74,-68,-72,137,-106,-109,-69,-110,-114,-71,-98,-102,-103,-105,-30,-33,-70,147,-89,106,-115,-107,-108,-113,-111,-112,-101,-104,-7,]),'OP_DIFDE':([96,121,122,123,124,126,128,129,130,132,135,149,153,154,158,160,161,162,166,167,188,197,199,200,201,202,203,213,],[-67,-4,-3,-117,-5,-2,-6,-118,-116,-118,173,-74,-68,-72,-106,-109,-69,-110,-114,-71,-70,-115,-107,-108,-113,-111,-112,-7,]),'OP_MENOROIGUAL':([96,121,122,123,124,126,128,129,130,132,135,149,153,154,158,160,161,162,166,167,188,197,199,200,201,202,203,213,],[-67,-4,-3,-117,-5,-2,-6,-118,-116,-118,175,-74,-68,-72,-106,-109,-69,-110,-114,-71,-70,-115,-107,-108,-113,-111,-112,-7,]),'OP_MAYOROIGUAL':([96,121,122,123,124,126,128,129,130,132,135,149,153,154,158,160,161,162,166,167,188,197,199,200,201,202,203,213,],[-67,-4,-3,-117,-5,-2,-6,-118,-116,-118,176,-74,-68,-72,-106,-109,-69,-110,-114,-71,-70,-115,-107,-108,-113,-111,-112,-7,]),'PR_false':([55,78,79,82,83,85,87,88,91,94,95,125,136,137,150,157,159,163,164,165,168,169,170,173,175,176,177,178,179,180,],[-118,-118,-118,124,124,124,-99,-100,124,124,-118,-118,124,124,-118,124,124,124,124,124,-118,-47,-48,-54,-56,-58,124,-53,-57,-55,]),'TO_PARABRE':([47,50,51,52,55,61,62,63,64,67,75,78,79,82,83,85,87,88,91,94,95,125,128,136,137,150,157,159,163,164,165,168,169,170,173,175,176,177,178,179,180,],[79,81,82,83,-118,91,93,94,95,-50,105,-118,-118,125,125,125,-99,-100,125,125,-118,-118,93,125,125,-118,125,125,125,125,125,-118,-47,-48,-54,-56,-58,125,-53,-57,-55,]),'PR_main':([3,4,5,7,8,9,12,13,17,18,19,24,32,41,42,73,104,],[-118,-118,-118,-118,27,-10,-13,-16,-118,-8,-12,-9,-34,-11,-14,-15,-38,]),'PR_return':([4,7,9,12,13,14,24,26,33,37,42,49,54,56,60,65,68,69,70,71,73,86,96,102,109,110,121,122,123,124,126,128,129,130,132,134,135,142,143,149,151,153,154,158,160,161,162,166,167,171,172,174,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,55,55,-35,-14,-66,55,-64,-63,-65,55,-61,-62,-46,-15,-90,-67,-91,-37,-23,-4,-3,-117,-5,-2,-6,-118,-116,-118,-118,-118,-49,55,-74,-118,-68,-72,-106,-109,-69,-110,-114,-71,-98,-102,-103,-105,-70,-93,55,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'$end':([2,43,],[0,-1,]),'OP_RESID':([96,121,122,123,124,126,128,130,132,149,153,154,161,167,188,197,213,],[-67,-4,-3,-117,-5,-2,-6,-116,163,-74,-68,-72,-69,-71,-70,-115,-7,]),'PR_white':([81,],[113,]),'PR_num':([6,15,16,105,106,],[20,20,20,-36,20,]),'TO_CORABRE':([4,42,89,],[11,-14,136,]),'TO_NUM':([11,28,55,78,79,82,83,85,87,88,91,94,95,125,136,137,150,157,159,163,164,165,168,169,170,173,175,176,177,178,179,180,],[31,72,-118,-118,-118,126,126,126,-99,-100,126,126,-118,-118,126,126,-118,126,126,126,126,126,-118,-47,-48,-54,-56,-58,126,-53,-57,-55,]),'PR_arreglo':([4,7,9,12,13,14,24,26,33,37,42,49,54,55,56,60,65,68,69,70,71,73,78,79,82,83,85,86,87,88,91,94,95,96,102,109,110,121,122,123,124,125,126,128,129,130,132,134,135,136,137,142,143,149,150,151,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,57,57,-35,-14,-66,57,-118,-64,-63,-65,57,-61,-62,-46,-15,-118,-118,127,127,127,-90,-99,-100,127,127,-118,-67,-91,-37,-23,-4,-3,-117,-5,-118,-2,-6,-118,-116,-118,-118,-118,127,127,-49,57,-74,-118,-118,-68,-72,127,-106,127,-109,-69,-110,127,127,127,-114,-71,-118,-47,-48,-98,-102,-54,-103,-56,-58,127,-53,-57,-55,-105,-70,-93,57,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'TO_DOSPTOS':([99,],[150,]),'OP_MAS':([96,121,122,123,124,126,128,129,130,132,149,153,154,161,162,166,167,188,197,201,202,203,213,],[-67,-4,-3,-117,-5,-2,-6,157,-116,-118,-74,-68,-72,-69,-110,-114,-71,-70,-115,-113,-111,-112,-7,]),'PR_blue':([81,],[118,]),'PR_kameForw':([4,7,9,12,13,14,24,26,33,37,42,49,54,56,60,65,68,69,70,71,73,86,96,102,109,110,121,122,123,124,126,128,129,130,132,134,135,142,143,149,151,153,154,158,160,161,162,166,167,171,172,174,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,58,58,-35,-14,-66,58,-64,-63,-65,58,-61,-62,-46,-15,-90,-67,-91,-37,-23,-4,-3,-117,-5,-2,-6,-118,-116,-118,-118,-118,-49,58,-74,-118,-68,-72,-106,-109,-69,-110,-114,-71,-98,-102,-103,-105,-70,-93,58,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'PR_kameBack':([4,7,9,12,13,14,24,26,33,37,42,49,54,56,60,65,68,69,70,71,73,86,96,102,109,110,121,122,123,124,126,128,129,130,132,134,135,142,143,149,151,153,154,158,160,161,162,166,167,171,172,174,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,59,59,-35,-14,-66,59,-64,-63,-65,59,-61,-62,-46,-15,-90,-67,-91,-37,-23,-4,-3,-117,-5,-2,-6,-118,-116,-118,-118,-118,-49,59,-74,-118,-68,-72,-106,-109,-69,-110,-114,-71,-98,-102,-103,-105,-70,-93,59,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'PR_green':([81,],[119,]),'PR_flot':([6,15,16,105,106,],[23,23,23,-36,23,]),'PR_negacion':([55,78,79,95,125,150,168,169,170,],[87,87,87,87,87,87,87,-47,-48,]),'ID':([4,7,9,12,13,14,20,21,22,23,24,26,33,34,35,36,37,38,42,49,54,55,56,57,60,65,66,68,69,70,71,73,78,79,82,83,85,86,87,88,91,93,94,95,96,102,109,110,121,122,123,124,125,126,127,128,129,130,132,134,135,136,137,142,143,147,149,150,151,152,153,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-20,42,-22,-21,-9,62,62,-40,-39,75,-35,76,-14,-66,62,-118,-64,89,-63,-65,99,62,-61,-62,-46,-15,-118,-118,128,128,128,-90,-99,-100,128,-73,128,-118,-67,-91,-37,-23,-4,-3,-117,-5,-118,-2,89,-6,-118,-116,-118,-118,-118,128,128,-49,62,99,-74,-118,-118,196,-68,-72,128,-106,128,-109,-69,-110,128,128,128,-114,-71,-118,-47,-48,-98,-102,-54,-103,-56,-58,128,-53,-57,-55,-105,-70,-93,62,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'OP_MULT':([96,121,122,123,124,126,128,130,132,149,153,154,161,167,188,197,213,],[-67,-4,-3,-117,-5,-2,-6,-116,164,-74,-68,-72,-69,-71,-70,-115,-7,]),'TO_LLACIERRA':([25,46,48,74,80,84,101,187,210,],[43,-60,80,104,-45,-59,151,206,214,]),'PR_orange':([81,],[112,]),'PR_if':([4,7,9,12,13,14,24,26,33,37,42,49,54,56,60,65,68,69,70,71,73,86,96,102,109,110,121,122,123,124,126,128,129,130,132,134,135,142,143,149,151,153,154,158,160,161,162,166,167,171,172,174,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,64,64,-35,-14,-66,64,-64,-63,-65,64,-61,-62,-46,-15,-90,-67,-91,-37,-23,-4,-3,-117,-5,-2,-6,-118,-116,-118,-118,-118,-49,64,-74,-118,-68,-72,-106,-109,-69,-110,-114,-71,-98,-102,-103,-105,-70,-93,64,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'OP_MAYORQUE':([96,121,122,123,124,126,128,129,130,132,135,149,153,154,158,160,161,162,166,167,188,197,199,200,201,202,203,213,],[-67,-4,-3,-117,-5,-2,-6,-118,-116,-118,179,-74,-68,-72,-106,-109,-69,-110,-114,-71,-70,-115,-107,-108,-113,-111,-112,-7,]),'PR_black':([81,],[117,]),'OP_MENORQUE':([96,121,122,123,124,126,128,129,130,132,135,149,153,154,158,160,161,162,166,167,188,197,199,200,201,202,203,213,],[-67,-4,-3,-117,-5,-2,-6,-118,-116,-118,180,-74,-68,-72,-106,-109,-69,-110,-114,-71,-70,-115,-107,-108,-113,-111,-112,-7,]),'PR_red':([81,],[115,]),'PR_bool':([6,15,16,105,106,],[22,22,22,-36,22,]),'PR_loop':([4,7,9,12,13,14,24,26,33,37,42,49,54,56,60,65,68,69,70,71,73,86,96,102,109,110,121,122,123,124,126,128,129,130,132,134,135,142,143,149,151,153,154,158,160,161,162,166,167,171,172,174,181,188,193,194,195,197,199,200,201,202,203,204,205,206,207,209,211,213,214,],[-118,-118,-10,-13,-16,-118,-9,67,67,-35,-14,-66,67,-64,-63,-65,67,-61,-62,-46,-15,-90,-67,-91,-37,-23,-4,-3,-117,-5,-2,-6,-118,-116,-118,-118,-118,-49,67,-74,-118,-68,-72,-106,-109,-69,-110,-114,-71,-98,-102,-103,-105,-70,-93,67,-95,-115,-107,-108,-113,-111,-112,-101,-104,-52,-92,-96,-94,-7,-97,]),'TO_PARCIERRA':([16,39,40,66,76,93,96,97,98,100,105,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,129,130,131,132,133,134,135,141,144,145,146,148,149,153,154,155,158,160,161,162,166,167,171,172,174,181,188,190,191,196,197,199,200,201,202,203,204,205,208,212,213,],[-118,77,-42,-118,-118,-73,-67,-118,149,-86,-36,-44,-41,153,-81,-83,154,-77,-80,-84,-79,-78,-82,-4,-3,-117,-5,-2,-6,-118,-116,161,-118,167,-118,-118,186,188,189,-85,-88,-74,-68,-72,197,-106,-109,-69,-110,-114,-71,-98,-102,-103,-105,-70,-118,-89,-118,-115,-107,-108,-113,-111,-112,-101,-104,-87,-43,-7,]),'PR_violet':([81,],[116,]),'PR_yellow':([81,],[120,]),'OP_IGUAL':([44,45,53,58,59,62,185,],[-29,78,-28,-26,-27,-24,-25,]),'PR_program':([0,],[1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decideType':([15,],[36,]),'megaExp':([55,78,79,95,125,150,168,],[86,110,111,145,155,191,204,]),'maybeElse':([151,],[193,]),'mainBlock':([8,],[25,]),'assignTo':([26,33,54,68,143,194,],[45,45,45,45,45,45,]),'opRelacional':([135,],[177,]),'superExp':([85,],[134,]),'mainBlock1':([8,],[26,]),'unParam':([66,147,],[97,190,]),'return':([26,33,54,68,143,194,],[56,56,56,56,56,56,]),'moreDimCreate':([10,72,],[29,103,]),'maybeNot':([55,78,79,95,125,150,168,],[85,85,85,85,85,85,85,]),'bloque':([26,33,54,68,143,194,],[48,74,84,101,187,210,]),'func12':([16,],[37,]),'func11':([5,17,],[16,16,]),'decVar':([3,7,14,26,33,54,68,143,194,],[5,24,33,49,49,49,49,49,49,]),'tipo':([6,15,16,106,],[21,35,38,152,]),'colorChoice':([81,],[114,]),'estructura':([26,33,54,68,143,194,],[54,54,54,54,54,54,]),'params':([16,],[39,]),'unaDim':([90,138,156,],[138,138,138,]),'var':([3,7,14,26,33,54,68,143,194,],[7,7,7,7,7,7,7,7,7,]),'paramVals':([66,],[98,]),'anotherMega':([134,],[171,]),'moreDimIndex':([90,138,156,],[139,184,198,]),'empty':([3,4,5,7,10,14,16,17,26,33,54,55,66,68,72,76,78,79,90,95,97,125,129,132,134,135,138,143,150,151,156,168,190,194,196,],[9,13,19,9,30,9,40,19,9,9,9,88,100,9,30,107,88,88,140,88,148,88,160,166,172,181,140,9,88,195,140,88,148,9,107,]),'func2':([14,],[32,]),'func1':([5,17,],[14,14,]),'var1':([3,7,14,26,33,54,68,143,194,],[4,4,4,4,4,4,4,4,4,]),'opLogico':([134,],[168,]),'doElse':([194,],[211,]),'prog':([0,],[2,]),'func':([5,17,],[17,17,]),'compara2':([68,],[102,]),'loop3':([92,],[142,]),'loop2':([61,],[92,]),'loop1':([26,33,54,68,143,194,],[61,61,61,61,61,61,]),'firstIndex':([57,127,],[90,156,]),'decFunc':([5,17,],[18,41,]),'firstCreate':([4,],[10,]),'anotherTerm':([132,],[162,]),'term':([82,83,85,91,94,136,137,157,159,163,164,165,177,],[129,129,129,129,129,129,129,129,129,201,202,203,129,]),'val':([82,83,85,91,94,136,137,157,159,163,164,165,177,],[123,123,123,123,123,123,123,123,123,123,123,123,123,]),'funcCall':([26,33,54,68,82,83,85,91,94,136,137,143,157,159,163,164,165,177,194,],[65,65,65,65,130,130,130,130,130,130,130,65,130,130,130,130,130,130,65,]),'maybeRel':([135,],[174,]),'arrayCreate':([4,],[12,]),'checkElse':([151,],[194,]),'assign':([26,33,54,68,143,194,],[69,69,69,69,69,69,]),'funcCall2':([66,],[96,]),'funcCall1':([26,33,54,68,82,83,85,91,94,136,137,143,157,159,163,164,165,177,194,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'anotherExp':([129,],[158,]),'fact':([82,83,85,91,94,136,137,157,159,163,164,165,177,],[132,132,132,132,132,132,132,132,132,132,132,132,132,]),'exp':([82,83,85,91,94,136,137,157,159,177,],[131,133,135,141,144,182,183,199,200,205,]),'moreParams':([76,196,],[108,212,]),'comparacion':([26,33,54,68,143,194,],[60,60,60,60,60,60,]),'compara1':([26,33,54,68,143,194,],[68,68,68,68,68,68,]),'moreParamVals':([97,190,],[146,208,]),'declare':([3,],[8,]),'loop':([26,33,54,68,143,194,],[70,70,70,70,70,70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR_program TO_LLAABRE declare mainBlock TO_LLACIERRA','prog',5,'p_prog','compisv3.py',405),
  ('val -> TO_NUM','val',1,'p_val','compisv3.py',411),
  ('val -> TO_FLOT','val',1,'p_val','compisv3.py',412),
  ('val -> PR_true','val',1,'p_val','compisv3.py',413),
  ('val -> PR_false','val',1,'p_val','compisv3.py',414),
  ('val -> ID','val',1,'p_val','compisv3.py',415),
  ('val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA','val',4,'p_val','compisv3.py',416),
  ('declare -> decVar decFunc','declare',2,'p_declare','compisv3.py',475),
  ('decVar -> var decVar','decVar',2,'p_decVar','compisv3.py',480),
  ('decVar -> empty','decVar',1,'p_decVar','compisv3.py',481),
  ('decFunc -> func decFunc','decFunc',2,'p_decFunc','compisv3.py',485),
  ('decFunc -> empty','decFunc',1,'p_decFunc','compisv3.py',486),
  ('var -> var1 arrayCreate','var',2,'p_var','compisv3.py',490),
  ('var1 -> PR_var tipo ID','var1',3,'p_var1','compisv3.py',506),
  ('arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA','arrayCreate',3,'p_arrayCreate','compisv3.py',526),
  ('arrayCreate -> empty','arrayCreate',1,'p_arrayCreate','compisv3.py',527),
  ('firstCreate -> TO_CORABRE TO_NUM','firstCreate',2,'p_firstCreate','compisv3.py',547),
  ('moreDimCreate -> TO_COMA TO_NUM moreDimCreate','moreDimCreate',3,'p_moreDimCreate','compisv3.py',555),
  ('moreDimCreate -> empty','moreDimCreate',1,'p_moreDimCreate','compisv3.py',556),
  ('tipo -> PR_num','tipo',1,'p_tipo','compisv3.py',565),
  ('tipo -> PR_flot','tipo',1,'p_tipo','compisv3.py',566),
  ('tipo -> PR_bool','tipo',1,'p_tipo','compisv3.py',567),
  ('assign -> assignTo OP_IGUAL megaExp','assign',3,'p_assign','compisv3.py',571),
  ('assignTo -> ID','assignTo',1,'p_assignTo','compisv3.py',604),
  ('assignTo -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA','assignTo',4,'p_assignTo','compisv3.py',605),
  ('assignTo -> PR_kameForw','assignTo',1,'p_assignTo','compisv3.py',606),
  ('assignTo -> PR_kameBack','assignTo',1,'p_assignTo','compisv3.py',607),
  ('assignTo -> PR_kameRot','assignTo',1,'p_assignTo','compisv3.py',608),
  ('assignTo -> PR_speed','assignTo',1,'p_assignTo','compisv3.py',609),
  ('firstIndex -> ID TO_CORABRE exp','firstIndex',3,'p_firstIndex','compisv3.py',658),
  ('moreDimIndex -> unaDim moreDimIndex','moreDimIndex',2,'p_moreDimIndex','compisv3.py',708),
  ('moreDimIndex -> empty','moreDimIndex',1,'p_moreDimIndex','compisv3.py',709),
  ('unaDim -> TO_COMA exp','unaDim',2,'p_unaDim','compisv3.py',712),
  ('func -> func1 func2','func',2,'p_func','compisv3.py',778),
  ('func1 -> func11 func12','func1',2,'p_func1','compisv3.py',782),
  ('func11 -> PR_function decideType ID TO_PARABRE','func11',4,'p_func11','compisv3.py',786),
  ('func12 -> params TO_PARCIERRA TO_LLAABRE','func12',3,'p_func12','compisv3.py',803),
  ('func2 -> decVar bloque TO_LLACIERRA','func2',3,'p_func2','compisv3.py',806),
  ('decideType -> tipo','decideType',1,'p_decideType','compisv3.py',810),
  ('decideType -> PR_void','decideType',1,'p_decideType','compisv3.py',811),
  ('params -> tipo ID moreParams','params',3,'p_params','compisv3.py',816),
  ('params -> empty','params',1,'p_params','compisv3.py',817),
  ('moreParams -> TO_COMA tipo ID moreParams','moreParams',4,'p_moreParams','compisv3.py',823),
  ('moreParams -> empty','moreParams',1,'p_moreParams','compisv3.py',824),
  ('mainBlock -> mainBlock1 bloque TO_LLACIERRA','mainBlock',3,'p_mainBlock','compisv3.py',830),
  ('mainBlock1 -> PR_main TO_LLAABRE','mainBlock1',2,'p_mainBlock1','compisv3.py',833),
  ('opLogico -> PR_interseccion','opLogico',1,'p_opLogico','compisv3.py',840),
  ('opLogico -> PR_union','opLogico',1,'p_opLogico','compisv3.py',841),
  ('loop -> loop1 loop2 loop3','loop',3,'p_loop','compisv3.py',849),
  ('loop1 -> PR_loop','loop1',1,'p_loop1','compisv3.py',860),
  ('loop2 -> TO_PARABRE exp TO_PARCIERRA','loop2',3,'p_loop2','compisv3.py',867),
  ('loop3 -> TO_LLAABRE bloque TO_LLACIERRA','loop3',3,'p_loop3','compisv3.py',883),
  ('opRelacional -> OP_DOBLEIGUAL','opRelacional',1,'p_opRelacional','compisv3.py',886),
  ('opRelacional -> OP_DIFDE','opRelacional',1,'p_opRelacional','compisv3.py',887),
  ('opRelacional -> OP_MENORQUE','opRelacional',1,'p_opRelacional','compisv3.py',888),
  ('opRelacional -> OP_MENOROIGUAL','opRelacional',1,'p_opRelacional','compisv3.py',889),
  ('opRelacional -> OP_MAYORQUE','opRelacional',1,'p_opRelacional','compisv3.py',890),
  ('opRelacional -> OP_MAYOROIGUAL','opRelacional',1,'p_opRelacional','compisv3.py',891),
  ('bloque -> estructura bloque','bloque',2,'p_bloque','compisv3.py',898),
  ('bloque -> TO_UWU','bloque',1,'p_bloque','compisv3.py',899),
  ('estructura -> assign','estructura',1,'p_estructura','compisv3.py',902),
  ('estructura -> loop','estructura',1,'p_estructura','compisv3.py',903),
  ('estructura -> comparacion','estructura',1,'p_estructura','compisv3.py',904),
  ('estructura -> return','estructura',1,'p_estructura','compisv3.py',905),
  ('estructura -> funcCall','estructura',1,'p_estructura','compisv3.py',906),
  ('estructura -> decVar','estructura',1,'p_estructura','compisv3.py',907),
  ('funcCall -> funcCall1 funcCall2','funcCall',2,'p_funcCall','compisv3.py',911),
  ('funcCall -> PR_draw TO_PARABRE megaExp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv3.py',912),
  ('funcCall -> PR_circle TO_PARABRE exp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv3.py',913),
  ('funcCall -> PR_square TO_PARABRE exp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv3.py',914),
  ('funcCall -> PR_size TO_PARABRE exp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv3.py',915),
  ('funcCall -> PR_color TO_PARABRE colorChoice TO_PARCIERRA','funcCall',4,'p_funcCall','compisv3.py',916),
  ('funcCall1 -> ID TO_PARABRE','funcCall1',2,'p_funcCall1','compisv3.py',938),
  ('funcCall2 -> paramVals TO_PARCIERRA','funcCall2',2,'p_funcCall2','compisv3.py',948),
  ('bool -> PR_true','bool',1,'p_bool','compisv3.py',964),
  ('bool -> PR_false','bool',1,'p_bool','compisv3.py',965),
  ('colorChoice -> PR_red','colorChoice',1,'p_colorChoice','compisv3.py',968),
  ('colorChoice -> PR_green','colorChoice',1,'p_colorChoice','compisv3.py',969),
  ('colorChoice -> PR_blue','colorChoice',1,'p_colorChoice','compisv3.py',970),
  ('colorChoice -> PR_violet','colorChoice',1,'p_colorChoice','compisv3.py',971),
  ('colorChoice -> PR_orange','colorChoice',1,'p_colorChoice','compisv3.py',972),
  ('colorChoice -> PR_yellow','colorChoice',1,'p_colorChoice','compisv3.py',973),
  ('colorChoice -> PR_white','colorChoice',1,'p_colorChoice','compisv3.py',974),
  ('colorChoice -> PR_black','colorChoice',1,'p_colorChoice','compisv3.py',975),
  ('paramVals -> unParam moreParamVals','paramVals',2,'p_paramVals','compisv3.py',979),
  ('paramVals -> empty','paramVals',1,'p_paramVals','compisv3.py',980),
  ('moreParamVals -> TO_COMA unParam moreParamVals','moreParamVals',3,'p_moreParamVals','compisv3.py',983),
  ('moreParamVals -> empty','moreParamVals',1,'p_moreParamVals','compisv3.py',984),
  ('unParam -> ID TO_DOSPTOS megaExp','unParam',3,'p_unParam','compisv3.py',987),
  ('return -> PR_return megaExp','return',2,'p_return','compisv3.py',1010),
  ('comparacion -> compara1 compara2','comparacion',2,'p_comparacion','compisv3.py',1021),
  ('compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE','compara1',5,'p_compara1','compisv3.py',1025),
  ('compara2 -> bloque TO_LLACIERRA maybeElse','compara2',3,'p_compara2','compisv3.py',1037),
  ('maybeElse -> checkElse doElse','maybeElse',2,'p_maybeElse','compisv3.py',1044),
  ('maybeElse -> empty','maybeElse',1,'p_maybeElse','compisv3.py',1045),
  ('checkElse -> PR_else TO_LLAABRE','checkElse',2,'p_checkElse','compisv3.py',1049),
  ('doElse -> bloque TO_LLACIERRA','doElse',2,'p_doElse','compisv3.py',1058),
  ('megaExp -> maybeNot superExp anotherMega','megaExp',3,'p_megaExp','compisv3.py',1061),
  ('maybeNot -> PR_negacion','maybeNot',1,'p_maybeNot','compisv3.py',1095),
  ('maybeNot -> empty','maybeNot',1,'p_maybeNot','compisv3.py',1096),
  ('anotherMega -> opLogico megaExp','anotherMega',2,'p_anotherMega','compisv3.py',1102),
  ('anotherMega -> empty','anotherMega',1,'p_anotherMega','compisv3.py',1103),
  ('superExp -> exp maybeRel','superExp',2,'p_superExp','compisv3.py',1106),
  ('maybeRel -> opRelacional exp','maybeRel',2,'p_maybeRel','compisv3.py',1110),
  ('maybeRel -> empty','maybeRel',1,'p_maybeRel','compisv3.py',1111),
  ('exp -> term anotherExp','exp',2,'p_exp','compisv3.py',1134),
  ('anotherExp -> OP_MAS exp','anotherExp',2,'p_anotherExp','compisv3.py',1161),
  ('anotherExp -> OP_MENOS exp','anotherExp',2,'p_anotherExp','compisv3.py',1162),
  ('anotherExp -> empty','anotherExp',1,'p_anotherExp','compisv3.py',1163),
  ('term -> fact anotherTerm','term',2,'p_term','compisv3.py',1169),
  ('anotherTerm -> OP_MULT term','anotherTerm',2,'p_anotherTerm','compisv3.py',1195),
  ('anotherTerm -> OP_DIV term','anotherTerm',2,'p_anotherTerm','compisv3.py',1196),
  ('anotherTerm -> OP_RESID term','anotherTerm',2,'p_anotherTerm','compisv3.py',1197),
  ('anotherTerm -> empty','anotherTerm',1,'p_anotherTerm','compisv3.py',1198),
  ('fact -> TO_PARABRE megaExp TO_PARCIERRA','fact',3,'p_fact','compisv3.py',1204),
  ('fact -> funcCall','fact',1,'p_fact','compisv3.py',1205),
  ('fact -> val','fact',1,'p_fact','compisv3.py',1206),
  ('empty -> <empty>','empty',0,'p_empty','compisv3.py',1211),
]
