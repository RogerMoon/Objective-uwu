
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ID OP_DIFDE OP_DIV OP_DOBLEIGUAL OP_IGUAL OP_MAS OP_MAYOROIGUAL OP_MAYORQUE OP_MENOROIGUAL OP_MENORQUE OP_MENOS OP_MULT OP_RESID PR_black PR_blue PR_bool PR_circle PR_color PR_draw PR_else PR_end PR_false PR_flot PR_function PR_green PR_home PR_if PR_interseccion PR_kameBack PR_kameForw PR_kameRot PR_loop PR_main PR_negacion PR_num PR_orange PR_program PR_red PR_return PR_size PR_square PR_true PR_union PR_var PR_violet PR_void PR_white PR_yellow TO_COMA TO_CORABRE TO_CORCIERRA TO_DIGIT TO_FLOT TO_LLAABRE TO_LLACIERRA TO_NUM TO_PARABRE TO_PARCIERRA TO_UWUprog : PR_program TO_LLAABRE declare mainBlock TO_LLACIERRAval : TO_NUM\n\t\t\t| TO_FLOT\n\t\t\t| PR_true\n\t\t\t| PR_false\n\t\t\t| IDdeclare : decVar decFunc decVar : var decVar \n\t\t\t\t| empty decFunc : func decFunc \n\t\t\t\t| emptyvar : PR_var tipo ID arrayCreatearrayCreate : TO_CORABRE TO_NUM TO_CORCIERRA \n\t\t\t\t   | TO_CORABRE TO_NUM TO_CORCIERRA TO_CORABRE TO_NUM TO_CORCIERRA \n\t\t\t\t   | emptyarrayIndex : TO_CORABRE exp TO_CORCIERRA \n\t\t\t\t  | TO_CORABRE exp TO_CORCIERRA TO_CORABRE exp TO_CORCIERRA \n\t\t\t\t  | emptytipo : PR_num \n\t\t\t| PR_flot\n\t\t\t| PR_bool assign : assignTo OP_IGUAL megaExpassignTo : ID arrayIndex\n\t\t\t\t| PR_kameForw\n\t\t\t\t| PR_kameBack\n\t\t\t\t| PR_kameRotfunc : func1 func2func1 : PR_function decideType ID TO_PARABRE params TO_PARCIERRA TO_LLAABREfunc2 : decVar bloque TO_LLACIERRAdecideType : tipo \n\t\t\t\t  | PR_voidparams : tipo ID moreParams \n\t\t\t  | emptymoreParams : TO_COMA tipo ID moreParams \n\t\t\t  | emptymainBlock : mainBlock1 bloque TO_LLACIERRAmainBlock1 : PR_main TO_LLAABREopLogico : PR_interseccion \n\t\t\t\t| PR_unionloop : loop1 loop2 loop3loop1 : PR_looploop2 : TO_PARABRE exp TO_PARCIERRAloop3 : TO_LLAABRE bloque TO_LLACIERRAopRelacional : OP_DOBLEIGUAL \n\t\t\t\t\t\t| OP_DIFDE \n\t\t\t\t\t\t| OP_MENORQUE \n\t\t\t\t\t\t| OP_MENOROIGUAL \n\t\t\t\t\t\t| OP_MAYORQUE \n\t\t\t\t\t\t| OP_MAYOROIGUALbloque : estructura bloque \n\t\t\t  | TO_UWUestructura : assign \n\t\t\t\t  | loop \n\t\t\t\t  | comparacion\n\t\t\t\t  | return \n\t\t\t\t  | funcCall \n\t\t\t\t  | decVarfuncCall : ID TO_PARABRE paramVals TO_PARCIERRA \n\t\t\t\t| PR_draw TO_PARABRE megaExp TO_PARCIERRA \n\t\t\t\t| PR_circle TO_PARABRE exp TO_PARCIERRA \n\t\t\t\t| PR_square TO_PARABRE exp TO_PARCIERRA \n\t\t\t\t| PR_size TO_PARABRE exp TO_PARCIERRA \n\t\t\t\t| PR_color TO_PARABRE colorChoice TO_PARCIERRA bool : PR_true \n\t\t\t| PR_falsecolorChoice : PR_red \n\t\t\t\t   | PR_green\n\t\t\t\t   | PR_blue \n\t\t\t\t   | PR_violet \n\t\t\t\t   | PR_orange \n\t\t\t\t   | PR_yellow \n\t\t\t\t   | PR_white \n\t\t\t\t   | PR_blackparamVals : val moreParamVals \n\t\t\t\t | emptymoreParamVals : TO_COMA val moreParamVals \n\t\t\t\t \t | emptyreturn : PR_return megaExpcomparacion : compara1 compara2compara1 : PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABREcompara2 : bloque TO_LLACIERRA maybeElsemaybeElse : checkElse doElse \n\t\t\t\t | emptycheckElse : PR_else TO_LLAABREdoElse : bloque TO_LLACIERRAmegaExp : maybeNot superExp anotherMegamaybeNot : PR_negacion \n\t\t\t\t| emptyanotherMega : opLogico megaExp \n\t\t\t\t   | emptysuperExp : exp maybeRelmaybeRel : opRelacional exp \n\t\t\t\t| emptyexp : term anotherExpanotherExp : OP_MAS exp \n\t\t\t\t  | OP_MENOS exp \n\t\t\t\t  | emptyterm : fact anotherTermanotherTerm : OP_MULT term \n\t\t\t\t   | OP_DIV term\n\t\t\t\t   | OP_RESID term\n\t\t\t\t   | emptyfact : TO_PARABRE megaExp TO_PARCIERRA \n\t\t\t| ID arrayIndex \n\t\t\t| valempty :'
    
_lr_action_items = {'PR_function':([3,4,6,8,11,18,22,28,58,59,81,122,192,],[-106,10,-106,-9,10,-8,-27,-106,-12,-15,-29,-13,-14,]),'PR_union':([76,95,96,97,98,99,100,103,104,106,107,126,128,131,132,136,144,151,154,168,169,170,171,172,173,175,193,],[-18,-106,-5,-105,-4,-3,-2,-6,-106,140,-106,-94,-97,-104,-98,-102,-91,-93,-16,-95,-96,-103,-101,-99,-100,-92,-17,]),'PR_draw':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,32,32,-106,-57,32,-55,-54,-56,32,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,32,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,32,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'PR_else':([118,],[161,]),'PR_kameRot':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,38,38,-106,-57,38,-55,-54,-56,38,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,38,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,38,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'PR_true':([40,60,61,64,65,67,69,70,71,73,75,77,78,102,125,127,133,134,135,138,139,140,143,145,146,147,148,149,150,157,177,],[-106,-106,-106,98,98,98,-87,-88,98,98,98,98,-106,-106,98,98,98,98,98,-106,-38,-39,-45,-47,-49,98,-44,-48,-46,98,98,]),'TO_FLOT':([40,60,61,64,65,67,69,70,71,73,75,77,78,102,125,127,133,134,135,138,139,140,143,145,146,147,148,149,150,157,177,],[-106,-106,-106,99,99,99,-87,-88,99,99,99,99,-106,-106,99,99,99,99,99,-106,-38,-39,-45,-47,-49,99,-44,-48,-46,99,99,]),'PR_interseccion':([76,95,96,97,98,99,100,103,104,106,107,126,128,131,132,136,144,151,154,168,169,170,171,172,173,175,193,],[-18,-106,-5,-105,-4,-3,-2,-6,-106,139,-106,-94,-97,-104,-98,-102,-91,-93,-16,-95,-96,-103,-101,-99,-100,-92,-17,]),'TO_UWU':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,31,31,-106,-57,31,-55,-54,-56,31,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,31,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,31,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'PR_var':([3,6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[5,5,-9,5,-8,5,5,-106,-57,5,-55,-54,-56,5,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,5,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,5,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'OP_DOBLEIGUAL':([76,95,96,97,98,99,100,103,104,107,126,128,131,132,136,154,168,169,170,171,172,173,193,],[-18,-106,-5,-105,-4,-3,-2,-6,-106,148,-94,-97,-104,-98,-102,-16,-95,-96,-103,-101,-99,-100,-17,]),'TO_LLAABRE':([1,21,72,152,160,161,166,],[3,54,110,-42,179,180,186,]),'OP_MENOS':([76,95,96,97,98,99,100,103,104,131,132,136,154,170,171,172,173,193,],[-18,127,-5,-105,-4,-3,-2,-6,-106,-104,-98,-102,-16,-103,-101,-99,-100,-17,]),'PR_void':([10,],[24,]),'PR_square':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,47,47,-106,-57,47,-55,-54,-56,47,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,47,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,47,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'PR_color':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,35,35,-106,-57,35,-55,-54,-56,35,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,35,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,35,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'OP_DIV':([76,96,97,98,99,100,103,104,131,154,170,193,],[-18,-5,-105,-4,-3,-2,-6,135,-104,-16,-103,-17,]),'PR_circle':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,36,36,-106,-57,36,-55,-54,-56,36,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,36,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,36,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'PR_size':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,37,37,-106,-57,37,-55,-54,-56,37,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,37,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,37,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'OP_IGUAL':([30,38,42,43,46,74,76,154,193,],[60,-26,-24,-25,-106,-23,-18,-16,-17,]),'TO_CORCIERRA':([76,83,95,96,97,98,99,100,103,104,111,126,128,131,132,136,154,168,169,170,171,172,173,187,188,193,],[-18,122,-106,-5,-105,-4,-3,-2,-6,-106,154,-94,-97,-104,-98,-102,-16,-95,-96,-103,-101,-99,-100,192,193,-17,]),'TO_COMA':([96,98,99,100,112,114,165,178,194,],[-5,-4,-3,-2,157,-6,183,157,183,]),'OP_DIFDE':([76,95,96,97,98,99,100,103,104,107,126,128,131,132,136,154,168,169,170,171,172,173,193,],[-18,-106,-5,-105,-4,-3,-2,-6,-106,143,-94,-97,-104,-98,-102,-16,-95,-96,-103,-101,-99,-100,-17,]),'OP_MENOROIGUAL':([76,95,96,97,98,99,100,103,104,107,126,128,131,132,136,154,168,169,170,171,172,173,193,],[-18,-106,-5,-105,-4,-3,-2,-6,-106,145,-94,-97,-104,-98,-102,-16,-95,-96,-103,-101,-99,-100,-17,]),'OP_MAYOROIGUAL':([76,95,96,97,98,99,100,103,104,107,126,128,131,132,136,154,168,169,170,171,172,173,193,],[-18,-106,-5,-105,-4,-3,-2,-6,-106,146,-94,-97,-104,-98,-102,-16,-95,-96,-103,-101,-99,-100,-17,]),'PR_false':([40,60,61,64,65,67,69,70,71,73,75,77,78,102,125,127,133,134,135,138,139,140,143,145,146,147,148,149,150,157,177,],[-106,-106,-106,96,96,96,-87,-88,96,96,96,96,-106,-106,96,96,96,96,96,-106,-38,-39,-45,-47,-49,96,-44,-48,-46,96,96,]),'TO_PARABRE':([32,35,36,37,40,45,46,47,48,50,56,60,61,64,65,67,69,70,71,73,77,78,102,125,127,133,134,135,138,139,140,143,145,146,147,148,149,150,177,],[61,63,64,65,-106,71,75,77,78,-41,82,-106,-106,102,102,102,-87,-88,102,102,102,-106,-106,102,102,102,102,102,-106,-38,-39,-45,-47,-49,102,-44,-48,-46,102,]),'PR_main':([3,4,6,7,8,11,12,13,18,22,27,28,58,59,81,122,192,],[-106,-106,-106,21,-9,-106,-7,-11,-8,-27,-10,-106,-12,-15,-29,-13,-14,]),'PR_return':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,40,40,-106,-57,40,-55,-54,-56,40,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,40,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,40,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'$end':([2,29,],[0,-1,]),'OP_RESID':([76,96,97,98,99,100,103,104,131,154,170,193,],[-18,-5,-105,-4,-3,-2,-6,133,-104,-16,-103,-17,]),'PR_white':([63,],[87,]),'PR_num':([5,10,82,183,],[14,14,14,14,]),'TO_CORABRE':([28,46,103,122,154,],[57,73,73,167,177,]),'TO_NUM':([40,57,60,61,64,65,67,69,70,71,73,75,77,78,102,125,127,133,134,135,138,139,140,143,145,146,147,148,149,150,157,167,177,],[-106,83,-106,-106,100,100,100,-87,-88,100,100,100,100,-106,-106,100,100,100,100,100,-106,-38,-39,-45,-47,-49,100,-44,-48,-46,100,187,100,]),'OP_MAS':([76,95,96,97,98,99,100,103,104,131,132,136,154,170,171,172,173,193,],[-18,125,-5,-105,-4,-3,-2,-6,-106,-104,-98,-102,-16,-103,-101,-99,-100,-17,]),'PR_blue':([63,],[92,]),'PR_kameForw':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,42,42,-106,-57,42,-55,-54,-56,42,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,42,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,42,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'PR_program':([0,],[1,]),'PR_green':([63,],[93,]),'PR_flot':([5,10,82,183,],[17,17,17,17,]),'PR_negacion':([40,60,61,78,102,138,139,140,],[69,69,69,69,69,69,-38,-39,]),'ID':([6,8,9,14,15,16,17,18,20,23,24,25,26,28,34,39,40,41,44,49,51,52,53,54,58,59,60,61,64,65,67,68,69,70,71,73,75,76,77,78,80,84,95,96,97,98,99,100,102,103,104,106,107,109,110,118,119,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,157,158,159,162,163,164,168,169,170,171,172,173,174,175,176,177,179,180,182,186,190,191,192,193,],[-106,-9,-106,-19,28,-21,-20,-8,46,46,-31,-30,56,-106,-57,46,-106,-55,-54,-56,46,-52,-53,-37,-12,-15,-106,-106,103,103,103,-78,-87,-88,103,103,114,-18,103,-106,-79,-22,-106,-5,-105,-4,-3,-2,-106,-6,-106,-106,-106,-40,46,-106,165,-13,-59,-63,103,-94,103,-97,-60,-104,-98,103,103,103,-102,-62,-106,-38,-39,-86,-90,-45,-91,-47,-49,103,-44,-48,-46,-93,-16,114,-58,-61,-81,46,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,103,-80,-84,-82,-28,-85,194,-14,-17,]),'OP_MULT':([76,96,97,98,99,100,103,104,131,154,170,193,],[-18,-5,-105,-4,-3,-2,-6,134,-104,-16,-103,-17,]),'TO_LLACIERRA':([19,31,33,55,62,66,79,153,181,],[29,-51,62,81,-36,-50,118,176,190,]),'PR_orange':([63,],[86,]),'PR_if':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,48,48,-106,-57,48,-55,-54,-56,48,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,48,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,48,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'OP_MAYORQUE':([76,95,96,97,98,99,100,103,104,107,126,128,131,132,136,154,168,169,170,171,172,173,193,],[-18,-106,-5,-105,-4,-3,-2,-6,-106,149,-94,-97,-104,-98,-102,-16,-95,-96,-103,-101,-99,-100,-17,]),'PR_black':([63,],[91,]),'PR_red':([63,],[89,]),'PR_bool':([5,10,82,183,],[16,16,16,16,]),'PR_loop':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,50,50,-106,-57,50,-55,-54,-56,50,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,50,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,50,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),'TO_PARCIERRA':([75,76,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,112,113,114,115,116,117,120,121,126,128,130,131,132,136,141,142,144,151,154,155,156,165,168,169,170,171,172,173,174,175,178,184,185,189,193,194,195,],[-106,-18,-106,123,-70,-72,124,-66,-69,-73,-68,-67,-71,-106,-5,-105,-4,-3,-2,129,-6,-106,137,-106,-106,152,-106,158,-6,-75,159,160,166,-33,-94,-97,170,-104,-98,-102,-86,-90,-91,-93,-16,-77,-74,-106,-95,-96,-103,-101,-99,-100,-89,-92,-106,-35,-32,-76,-17,-106,-34,]),'PR_violet':([63,],[90,]),'PR_yellow':([63,],[94,]),'OP_MENORQUE':([76,95,96,97,98,99,100,103,104,107,126,128,131,132,136,154,168,169,170,171,172,173,193,],[-18,-106,-5,-105,-4,-3,-2,-6,-106,150,-94,-97,-104,-98,-102,-16,-95,-96,-103,-101,-99,-100,-17,]),'PR_kameBack':([6,8,9,18,20,23,28,34,39,41,44,49,51,52,53,54,58,59,68,76,80,84,95,96,97,98,99,100,103,104,106,107,109,110,118,122,123,124,126,128,129,131,132,136,137,141,142,144,151,154,158,159,162,163,164,168,169,170,171,172,173,174,175,176,179,180,182,186,190,192,193,],[-106,-9,-106,-8,43,43,-106,-57,43,-55,-54,-56,43,-52,-53,-37,-12,-15,-78,-18,-79,-22,-106,-5,-105,-4,-3,-2,-6,-106,-106,-106,-40,43,-106,-13,-59,-63,-94,-97,-60,-104,-98,-102,-62,-86,-90,-91,-93,-16,-58,-61,-81,43,-83,-95,-96,-103,-101,-99,-100,-89,-92,-43,-80,-84,-82,-28,-85,-14,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decideType':([10,],[26,]),'megaExp':([40,60,61,78,102,138,],[68,84,85,117,130,174,]),'maybeElse':([118,],[162,]),'mainBlock':([7,],[19,]),'assignTo':([20,23,39,51,110,163,],[30,30,30,30,30,30,]),'arrayIndex':([46,103,],[74,131,]),'superExp':([67,],[106,]),'mainBlock1':([7,],[20,]),'opRelacional':([107,],[147,]),'anotherMega':([106,],[141,]),'bloque':([20,23,39,51,110,163,],[33,55,66,79,153,181,]),'maybeNot':([40,60,61,78,102,138,],[67,67,67,67,67,67,]),'checkElse':([118,],[163,]),'decVar':([3,6,9,20,23,39,51,110,163,],[4,18,23,34,34,34,34,34,34,]),'tipo':([5,10,82,183,],[15,25,119,191,]),'colorChoice':([63,],[88,]),'estructura':([20,23,39,51,110,163,],[39,39,39,39,39,39,]),'params':([82,],[120,]),'var':([3,6,9,20,23,39,51,110,163,],[6,6,6,6,6,6,6,6,6,]),'paramVals':([75,],[113,]),'empty':([3,4,6,9,11,20,23,28,39,40,46,51,60,61,75,78,82,95,102,103,104,106,107,110,112,118,138,163,165,178,194,],[8,13,8,8,13,8,8,59,8,70,76,8,70,70,115,70,121,128,70,76,136,142,151,8,155,164,70,8,184,155,184,]),'func2':([9,],[22,]),'func1':([4,11,],[9,9,]),'return':([20,23,39,51,110,163,],[41,41,41,41,41,41,]),'opLogico':([106,],[138,]),'doElse':([163,],[182,]),'prog':([0,],[2,]),'func':([4,11,],[11,11,]),'compara2':([51,],[80,]),'loop3':([72,],[109,]),'loop2':([45,],[72,]),'loop1':([20,23,39,51,110,163,],[45,45,45,45,45,45,]),'decFunc':([4,11,],[12,27,]),'anotherTerm':([104,],[132,]),'term':([64,65,67,71,73,77,125,127,133,134,135,147,177,],[95,95,95,95,95,95,95,95,171,172,173,95,95,]),'val':([64,65,67,71,73,75,77,125,127,133,134,135,147,157,177,],[97,97,97,97,97,112,97,97,97,97,97,97,97,178,97,]),'funcCall':([20,23,39,51,110,163,],[49,49,49,49,49,49,]),'maybeRel':([107,],[144,]),'arrayCreate':([28,],[58,]),'declare':([3,],[7,]),'anotherExp':([95,],[126,]),'fact':([64,65,67,71,73,77,125,127,133,134,135,147,177,],[104,104,104,104,104,104,104,104,104,104,104,104,104,]),'exp':([64,65,67,71,73,77,125,127,147,177,],[101,105,107,108,111,116,168,169,175,188,]),'moreParams':([165,194,],[185,195,]),'comparacion':([20,23,39,51,110,163,],[44,44,44,44,44,44,]),'compara1':([20,23,39,51,110,163,],[51,51,51,51,51,51,]),'moreParamVals':([112,178,],[156,189,]),'assign':([20,23,39,51,110,163,],[52,52,52,52,52,52,]),'loop':([20,23,39,51,110,163,],[53,53,53,53,53,53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR_program TO_LLAABRE declare mainBlock TO_LLACIERRA','prog',5,'p_prog','compisv2.py',239),
  ('val -> TO_NUM','val',1,'p_val','compisv2.py',245),
  ('val -> TO_FLOT','val',1,'p_val','compisv2.py',246),
  ('val -> PR_true','val',1,'p_val','compisv2.py',247),
  ('val -> PR_false','val',1,'p_val','compisv2.py',248),
  ('val -> ID','val',1,'p_val','compisv2.py',249),
  ('declare -> decVar decFunc','declare',2,'p_declare','compisv2.py',268),
  ('decVar -> var decVar','decVar',2,'p_decVar','compisv2.py',273),
  ('decVar -> empty','decVar',1,'p_decVar','compisv2.py',274),
  ('decFunc -> func decFunc','decFunc',2,'p_decFunc','compisv2.py',280),
  ('decFunc -> empty','decFunc',1,'p_decFunc','compisv2.py',281),
  ('var -> PR_var tipo ID arrayCreate','var',4,'p_var','compisv2.py',284),
  ('arrayCreate -> TO_CORABRE TO_NUM TO_CORCIERRA','arrayCreate',3,'p_arrayCreate','compisv2.py',292),
  ('arrayCreate -> TO_CORABRE TO_NUM TO_CORCIERRA TO_CORABRE TO_NUM TO_CORCIERRA','arrayCreate',6,'p_arrayCreate','compisv2.py',293),
  ('arrayCreate -> empty','arrayCreate',1,'p_arrayCreate','compisv2.py',294),
  ('arrayIndex -> TO_CORABRE exp TO_CORCIERRA','arrayIndex',3,'p_arrayIndex','compisv2.py',297),
  ('arrayIndex -> TO_CORABRE exp TO_CORCIERRA TO_CORABRE exp TO_CORCIERRA','arrayIndex',6,'p_arrayIndex','compisv2.py',298),
  ('arrayIndex -> empty','arrayIndex',1,'p_arrayIndex','compisv2.py',299),
  ('tipo -> PR_num','tipo',1,'p_tipo','compisv2.py',301),
  ('tipo -> PR_flot','tipo',1,'p_tipo','compisv2.py',302),
  ('tipo -> PR_bool','tipo',1,'p_tipo','compisv2.py',303),
  ('assign -> assignTo OP_IGUAL megaExp','assign',3,'p_assign','compisv2.py',307),
  ('assignTo -> ID arrayIndex','assignTo',2,'p_assignTo','compisv2.py',323),
  ('assignTo -> PR_kameForw','assignTo',1,'p_assignTo','compisv2.py',324),
  ('assignTo -> PR_kameBack','assignTo',1,'p_assignTo','compisv2.py',325),
  ('assignTo -> PR_kameRot','assignTo',1,'p_assignTo','compisv2.py',326),
  ('func -> func1 func2','func',2,'p_func','compisv2.py',332),
  ('func1 -> PR_function decideType ID TO_PARABRE params TO_PARCIERRA TO_LLAABRE','func1',7,'p_func1','compisv2.py',336),
  ('func2 -> decVar bloque TO_LLACIERRA','func2',3,'p_func2','compisv2.py',342),
  ('decideType -> tipo','decideType',1,'p_decideType','compisv2.py',345),
  ('decideType -> PR_void','decideType',1,'p_decideType','compisv2.py',346),
  ('params -> tipo ID moreParams','params',3,'p_params','compisv2.py',351),
  ('params -> empty','params',1,'p_params','compisv2.py',352),
  ('moreParams -> TO_COMA tipo ID moreParams','moreParams',4,'p_moreParams','compisv2.py',355),
  ('moreParams -> empty','moreParams',1,'p_moreParams','compisv2.py',356),
  ('mainBlock -> mainBlock1 bloque TO_LLACIERRA','mainBlock',3,'p_mainBlock','compisv2.py',359),
  ('mainBlock1 -> PR_main TO_LLAABRE','mainBlock1',2,'p_mainBlock1','compisv2.py',362),
  ('opLogico -> PR_interseccion','opLogico',1,'p_opLogico','compisv2.py',368),
  ('opLogico -> PR_union','opLogico',1,'p_opLogico','compisv2.py',369),
  ('loop -> loop1 loop2 loop3','loop',3,'p_loop','compisv2.py',377),
  ('loop1 -> PR_loop','loop1',1,'p_loop1','compisv2.py',386),
  ('loop2 -> TO_PARABRE exp TO_PARCIERRA','loop2',3,'p_loop2','compisv2.py',390),
  ('loop3 -> TO_LLAABRE bloque TO_LLACIERRA','loop3',3,'p_loop3','compisv2.py',404),
  ('opRelacional -> OP_DOBLEIGUAL','opRelacional',1,'p_opRelacional','compisv2.py',407),
  ('opRelacional -> OP_DIFDE','opRelacional',1,'p_opRelacional','compisv2.py',408),
  ('opRelacional -> OP_MENORQUE','opRelacional',1,'p_opRelacional','compisv2.py',409),
  ('opRelacional -> OP_MENOROIGUAL','opRelacional',1,'p_opRelacional','compisv2.py',410),
  ('opRelacional -> OP_MAYORQUE','opRelacional',1,'p_opRelacional','compisv2.py',411),
  ('opRelacional -> OP_MAYOROIGUAL','opRelacional',1,'p_opRelacional','compisv2.py',412),
  ('bloque -> estructura bloque','bloque',2,'p_bloque','compisv2.py',419),
  ('bloque -> TO_UWU','bloque',1,'p_bloque','compisv2.py',420),
  ('estructura -> assign','estructura',1,'p_estructura','compisv2.py',423),
  ('estructura -> loop','estructura',1,'p_estructura','compisv2.py',424),
  ('estructura -> comparacion','estructura',1,'p_estructura','compisv2.py',425),
  ('estructura -> return','estructura',1,'p_estructura','compisv2.py',426),
  ('estructura -> funcCall','estructura',1,'p_estructura','compisv2.py',427),
  ('estructura -> decVar','estructura',1,'p_estructura','compisv2.py',428),
  ('funcCall -> ID TO_PARABRE paramVals TO_PARCIERRA','funcCall',4,'p_funcCall','compisv2.py',432),
  ('funcCall -> PR_draw TO_PARABRE megaExp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv2.py',433),
  ('funcCall -> PR_circle TO_PARABRE exp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv2.py',434),
  ('funcCall -> PR_square TO_PARABRE exp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv2.py',435),
  ('funcCall -> PR_size TO_PARABRE exp TO_PARCIERRA','funcCall',4,'p_funcCall','compisv2.py',436),
  ('funcCall -> PR_color TO_PARABRE colorChoice TO_PARCIERRA','funcCall',4,'p_funcCall','compisv2.py',437),
  ('bool -> PR_true','bool',1,'p_bool','compisv2.py',440),
  ('bool -> PR_false','bool',1,'p_bool','compisv2.py',441),
  ('colorChoice -> PR_red','colorChoice',1,'p_colorChoice','compisv2.py',444),
  ('colorChoice -> PR_green','colorChoice',1,'p_colorChoice','compisv2.py',445),
  ('colorChoice -> PR_blue','colorChoice',1,'p_colorChoice','compisv2.py',446),
  ('colorChoice -> PR_violet','colorChoice',1,'p_colorChoice','compisv2.py',447),
  ('colorChoice -> PR_orange','colorChoice',1,'p_colorChoice','compisv2.py',448),
  ('colorChoice -> PR_yellow','colorChoice',1,'p_colorChoice','compisv2.py',449),
  ('colorChoice -> PR_white','colorChoice',1,'p_colorChoice','compisv2.py',450),
  ('colorChoice -> PR_black','colorChoice',1,'p_colorChoice','compisv2.py',451),
  ('paramVals -> val moreParamVals','paramVals',2,'p_paramVals','compisv2.py',454),
  ('paramVals -> empty','paramVals',1,'p_paramVals','compisv2.py',455),
  ('moreParamVals -> TO_COMA val moreParamVals','moreParamVals',3,'p_moreParamVals','compisv2.py',458),
  ('moreParamVals -> empty','moreParamVals',1,'p_moreParamVals','compisv2.py',459),
  ('return -> PR_return megaExp','return',2,'p_return','compisv2.py',462),
  ('comparacion -> compara1 compara2','comparacion',2,'p_comparacion','compisv2.py',465),
  ('compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE','compara1',5,'p_compara1','compisv2.py',469),
  ('compara2 -> bloque TO_LLACIERRA maybeElse','compara2',3,'p_compara2','compisv2.py',480),
  ('maybeElse -> checkElse doElse','maybeElse',2,'p_maybeElse','compisv2.py',487),
  ('maybeElse -> empty','maybeElse',1,'p_maybeElse','compisv2.py',488),
  ('checkElse -> PR_else TO_LLAABRE','checkElse',2,'p_checkElse','compisv2.py',492),
  ('doElse -> bloque TO_LLACIERRA','doElse',2,'p_doElse','compisv2.py',501),
  ('megaExp -> maybeNot superExp anotherMega','megaExp',3,'p_megaExp','compisv2.py',504),
  ('maybeNot -> PR_negacion','maybeNot',1,'p_maybeNot','compisv2.py',534),
  ('maybeNot -> empty','maybeNot',1,'p_maybeNot','compisv2.py',535),
  ('anotherMega -> opLogico megaExp','anotherMega',2,'p_anotherMega','compisv2.py',541),
  ('anotherMega -> empty','anotherMega',1,'p_anotherMega','compisv2.py',542),
  ('superExp -> exp maybeRel','superExp',2,'p_superExp','compisv2.py',545),
  ('maybeRel -> opRelacional exp','maybeRel',2,'p_maybeRel','compisv2.py',549),
  ('maybeRel -> empty','maybeRel',1,'p_maybeRel','compisv2.py',550),
  ('exp -> term anotherExp','exp',2,'p_exp','compisv2.py',572),
  ('anotherExp -> OP_MAS exp','anotherExp',2,'p_anotherExp','compisv2.py',598),
  ('anotherExp -> OP_MENOS exp','anotherExp',2,'p_anotherExp','compisv2.py',599),
  ('anotherExp -> empty','anotherExp',1,'p_anotherExp','compisv2.py',600),
  ('term -> fact anotherTerm','term',2,'p_term','compisv2.py',606),
  ('anotherTerm -> OP_MULT term','anotherTerm',2,'p_anotherTerm','compisv2.py',628),
  ('anotherTerm -> OP_DIV term','anotherTerm',2,'p_anotherTerm','compisv2.py',629),
  ('anotherTerm -> OP_RESID term','anotherTerm',2,'p_anotherTerm','compisv2.py',630),
  ('anotherTerm -> empty','anotherTerm',1,'p_anotherTerm','compisv2.py',631),
  ('fact -> TO_PARABRE megaExp TO_PARCIERRA','fact',3,'p_fact','compisv2.py',637),
  ('fact -> ID arrayIndex','fact',2,'p_fact','compisv2.py',638),
  ('fact -> val','fact',1,'p_fact','compisv2.py',639),
  ('empty -> <empty>','empty',0,'p_empty','compisv2.py',644),
]
